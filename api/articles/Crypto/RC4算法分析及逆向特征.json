{"title":"RC4算法分析及逆向特征","uid":"a9a1a1638fa879e93ed0cd1f92852131","slug":"Crypto/RC4算法分析及逆向特征","date":"2022-03-15T10:47:14.000Z","updated":"2022-04-03T10:11:29.829Z","comments":true,"path":"api/articles/Crypto/RC4算法分析及逆向特征.json","keywords":null,"cover":"https://s2.loli.net/2022/04/03/tSwLIbQzBhUMApi.jpg","content":"<h1 id=\"RC4算法分析\"><a href=\"#RC4算法分析\" class=\"headerlink\" title=\"RC4算法分析\"></a>RC4算法分析</h1><h2 id=\"一、RC4简介：\"><a href=\"#一、RC4简介：\" class=\"headerlink\" title=\"一、RC4简介：\"></a>一、RC4简介：</h2><p>RC4加密算法是密钥长度可变的流加密算法，其实就是生成一个密钥，然后去和明文XOR ，它还有一个特点就是它的密钥长度是可变的，范围是(1~256)字节。由此可以看出RC4算法的强度完全依赖于密钥的强度，如果获得密钥基本就可以直接获得明文。</p>\n<h2 id=\"二、算法原理：\"><a href=\"#二、算法原理：\" class=\"headerlink\" title=\"二、算法原理：\"></a>二、算法原理：</h2><h3 id=\"1-原理概述：\"><a href=\"#1-原理概述：\" class=\"headerlink\" title=\"1.原理概述：\"></a>1.原理概述：</h3><p>通过密钥(Key 1-256字节)，计算得到一个256字节的数组(S盒)，然后将S盒中的数据与明文或密文进行异或，以此进行加解密操作。</p>\n<p>注意：加解密过程中S盒中的数据会发生改变，所以加密或解密之前需要使用密钥对S盒数据进行重新初始化。</p>\n<h3 id=\"2-加密过程：\"><a href=\"#2-加密过程：\" class=\"headerlink\" title=\"2.加密过程：\"></a>2.加密过程：</h3><ol>\n<li><p>S盒初始化(S-box的作用是和明文异或，T作为临时变量)</p>\n<p>S的初始化是从0开始填充一直到255，而T根据密钥填充</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n        S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        T<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> K<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span>len<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>根据临时变量T来将S盒里面的值打乱</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> T<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//需要注意的是S盒的值本身没有改变</span>\n      tmp <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">//只是根据T将位置打乱了</span>\n      S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>加密</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>len<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n      i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n      j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n      tmp <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n      t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n      K<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n\t\t\tE<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> K<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//M[]:明文 E[]:密文</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"3-代码实例：\"><a href=\"#3-代码实例：\" class=\"headerlink\" title=\"3.代码实例：\"></a>3.代码实例：</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">//程序开始</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> longULONG<span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">/*初始化函数*/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">rc4_init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> Len<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        k<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span>Len<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n        tmp <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//交换s[i]和s[j]</span>\n        s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token comment\">/*加解密*/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">rc4_crypt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span>Data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> Len<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;</span>Len<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n        tmp <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//交换s[x]和s[y]</span>\n        s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n        t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n        Data<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> s<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//S-box</span>\n    <span class=\"token keyword\">char</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"justfortest\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> pData<span class=\"token punctuation\">[</span><span class=\"token number\">512</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"这是一个用来加密的数据Data\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> len <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>pData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n \n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pData=%s\\\\n\"</span><span class=\"token punctuation\">,</span> pData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key=%s,length=%d\\\\n\\\\n\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">rc4_init</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>key<span class=\"token punctuation\">,</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//已经完成了初始化</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"完成对S[i]的初始化，如下：\\\\n\\\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%02X\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span><span class=\"token char\">'\\\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\n\\\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//用s2[i]暂时保留经过初始化的s[i]，很重要的！！！</span>\n    <span class=\"token punctuation\">&#123;</span>\n        s2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已经初始化，现在加密:\\\\n\\\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">rc4_crypt</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pData<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//加密</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pData=%s\\\\n\\\\n\"</span><span class=\"token punctuation\">,</span> pData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已经加密，现在解密:\\\\n\\\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//rc4_init(s,(unsignedchar*)key,strlen(key));//初始化密钥</span>\n    <span class=\"token function\">rc4_crypt</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>pData<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//解密</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pData=%s\\\\n\\\\n\"</span><span class=\"token punctuation\">,</span> pData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token comment\">//程序完</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>由于加密是用的xor，而根据异或的对称性，加密和解密使用的是同一个函数。</p>\n<h1 id=\"RC4逆向特征分析\"><a href=\"#RC4逆向特征分析\" class=\"headerlink\" title=\"RC4逆向特征分析\"></a>RC4逆向特征分析</h1><h2 id=\"1-RC4在逆向中的特征：\"><a href=\"#1-RC4在逆向中的特征：\" class=\"headerlink\" title=\"1.RC4在逆向中的特征：\"></a>1.RC4在逆向中的特征：</h2><ol>\n<li>一般来说会需要调用两个函数，一个用来初始化S盒，一个用来生成密钥流然后加密</li>\n<li>初始化的数组为256字节也可以作为参考，(但不一定就是256字节)</li>\n<li>密钥字串会被用来循环填充到一个新表</li>\n<li>最后一定会用<code>xor</code>进行加解密</li>\n</ol>\n<h2 id=\"2-For-Example：\"><a href=\"#2-For-Example：\" class=\"headerlink\" title=\"2.For Example：\"></a>2.For Example：</h2><p>以加密与解密中的RC4Sample.exe：</p>\n<p>winmain→DialogFunc→sub_401270，截取部分代码</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">char</span> v14<span class=\"token punctuation\">[</span><span class=\"token number\">1032</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+214h] [ebp-408h] BYREF</span>\nv5<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nv5<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span><span class=\"token punctuation\">;</span>\nv5<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">69</span><span class=\"token punctuation\">;</span>\nv5<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">103</span><span class=\"token punctuation\">;</span>\nv5<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">119</span><span class=\"token punctuation\">;</span>\nv5<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">85</span><span class=\"token punctuation\">;</span>\nv5<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">51</span><span class=\"token punctuation\">;</span>\nv5<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">17</span><span class=\"token punctuation\">;</span>\nv1 <span class=\"token operator\">=</span> <span class=\"token function\">GetDlgItemTextA</span><span class=\"token punctuation\">(</span>hDlg<span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>String<span class=\"token punctuation\">,</span> <span class=\"token number\">257</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v1 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v14<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>v14<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_401000</span><span class=\"token punctuation\">(</span>v14<span class=\"token punctuation\">,</span> v5<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_401070</span><span class=\"token punctuation\">(</span>v14<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>String<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到下面有两个函数，定义了一个v14变量，大小为1032字节。v5数组里有8个值，两变量一起被调用到了sub_401000函数内，跟过去：</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/xu37wmtXvspG9HD.png\" alt=\"image-20220403181033880\"></p>\n<p>这里有两个段重要代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">do</span>\n    <span class=\"token operator\">*</span>s_box_1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> v5<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>上面这段对应了原理部分的给S盒赋初值</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">do</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v9 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v8<span class=\"token punctuation\">;</span>\n    v10 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>v8 <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">++</span>v3<span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">=</span> v10<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>v8 <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">[</span>v10<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v4<span class=\"token punctuation\">[</span>v10<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v9<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">>=</span> k_len <span class=\"token punctuation\">)</span>\n      v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">++</span>v8<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">--</span>v11<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v11 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这部分代码则是对S盒进行乱序操作。</p>\n<p>接着我们看第二个函数。</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/tk1HjXvNUD3VRup.png\" alt=\"image-20220403181118080\"></p>\n<p>注意最长的那一行，这个程序不像之前的那样有一个专门的数组放密文，而是直接覆盖掉了明文。</p>\n<h2 id=\"3-总结：\"><a href=\"#3-总结：\" class=\"headerlink\" title=\"3.总结：\"></a>3.总结：</h2><p>RC4函数没有魔数一类的值为特征，但是从结构来看肯定会有三个part，第一为s盒的初始化，第二个为打乱s盒，第三个为加解密函数也就是异或。</p>\n<p>从0到1总结的RC4的伪代码为：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\nj <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nt<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n","feature":false,"text":"RC4算法分析一、RC4简介：RC4加密算法是密钥长度可变的流加密算法，其实就是生成一个密钥，然后去和明文XOR ，它还有一个特点就是它的密钥长度是可变的，范围是(1~256)字节。由此可以看出RC4算法的强度完全依赖于密钥的强度，如果获得密钥基本就可以直接获得明文。 二、算法原...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Crypto","slug":"Crypto","count":4,"path":"api/categories/Crypto.json"}],"tags":[{"name":"reverse常见算法","slug":"reverse常见算法","count":3,"path":"api/tags/reverse常见算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#RC4%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\">RC4算法分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81RC4%E7%AE%80%E4%BB%8B%EF%BC%9A\"><span class=\"toc-text\">一、RC4简介：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86%EF%BC%9A\"><span class=\"toc-text\">二、算法原理：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%8E%9F%E7%90%86%E6%A6%82%E8%BF%B0%EF%BC%9A\"><span class=\"toc-text\">1.原理概述：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%8A%A0%E5%AF%86%E8%BF%87%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">2.加密过程：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B%EF%BC%9A\"><span class=\"toc-text\">3.代码实例：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#RC4%E9%80%86%E5%90%91%E7%89%B9%E5%BE%81%E5%88%86%E6%9E%90\"><span class=\"toc-text\">RC4逆向特征分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-RC4%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E7%89%B9%E5%BE%81%EF%BC%9A\"><span class=\"toc-text\">1.RC4在逆向中的特征：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-For-Example%EF%BC%9A\"><span class=\"toc-text\">2.For Example：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%80%BB%E7%BB%93%EF%BC%9A\"><span class=\"toc-text\">3.总结：</span></a></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"mapped":true,"prev_post":{"title":"RC4逆向题实例1","uid":"e046ec4a095c5d314105a6a20189055a","slug":"Reverse/RC4逆向题实例1","date":"2022-03-15T11:46:07.000Z","updated":"2022-04-03T10:08:25.809Z","comments":true,"path":"api/articles/Reverse/RC4逆向题实例1.json","keywords":null,"cover":"https://s2.loli.net/2022/04/03/tEn5MeVdLpzSwIB.jpg","text":"从0到1例题：BabyAlgorithm1.基本信息探查：ELF文件，64位，无壳 2.IDA分析：跟踪到主函数： __int64 __fastcall main(int a1, char **a2, char **a3) &#123; __int64 result; // ra...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":11,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":12,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false},"next_post":{"title":"python的逆向考点","uid":"c34e721018d13d122ac641371d7bebf2","slug":"Reverse/python的逆向考点","date":"2022-03-15T07:25:10.000Z","updated":"2022-03-30T13:26:40.588Z","comments":true,"path":"api/articles/Reverse/python的逆向考点.json","keywords":null,"cover":"https://s2.loli.net/2022/03/30/ujQPEs4KRx5hcTb.jpg","text":"前置知识： https://magnificent-syrup-61f.notion.site/python-9aaee637228d499fabe9d08731f12c38 考点一：pyc→pypyc转py的方法1.简单题一般可以用工具：uncompyle6，或者在线网站htt...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":11,"path":"api/categories/Reverse.json"}],"tags":[{"name":"语言逆向","slug":"语言逆向","count":1,"path":"api/tags/语言逆向.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false}}