{"title":"RC4逆向题实例1","uid":"e046ec4a095c5d314105a6a20189055a","slug":"RC4逆向题实例1","date":"2022-03-15T11:46:07.000Z","updated":"2022-03-15T17:13:35.869Z","comments":true,"path":"api/articles/RC4逆向题实例1.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/IMG_20210219_224224.jpg","content":"<h1 id=\"从0到1例题：BabyAlgorithm\"><a href=\"#从0到1例题：BabyAlgorithm\" class=\"headerlink\" title=\"从0到1例题：BabyAlgorithm\"></a>从0到1例题：BabyAlgorithm</h1><h2 id=\"1-基本信息探查：\"><a href=\"#1-基本信息探查：\" class=\"headerlink\" title=\"1.基本信息探查：\"></a>1.基本信息探查：</h2><p>ELF文件，64位，无壳</p>\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220315195241209.png\" alt=\"image-20220315195241209\"></p>\n<h2 id=\"2-IDA分析：\"><a href=\"#2-IDA分析：\" class=\"headerlink\" title=\"2.IDA分析：\"></a>2.IDA分析：</h2><p>跟踪到主函数：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  __int64 result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+Ch] [rbp-E4h]</span>\n  <span class=\"token keyword\">char</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-E0h] BYREF</span>\n  <span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-D0h] BYREF</span>\n  <span class=\"token keyword\">char</span> v7<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+60h] [rbp-90h] BYREF</span>\n  <span class=\"token keyword\">char</span> rflag<span class=\"token punctuation\">[</span><span class=\"token number\">72</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+A0h] [rbp-50h] BYREF</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+E8h] [rbp-8h]</span>\n\n  v9 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>rflag<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">198</span><span class=\"token punctuation\">;</span>                               <span class=\"token comment\">// rflag为加密后的字串</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">202</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">191</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">81</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">67</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">55</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">49</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">117</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">228</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'\\\\x8E'</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'\\\\xC0'</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'T'</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'\\\\x8F'</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">94</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">63</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">21</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">91</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">109</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">113</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">85</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">78</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">29</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">88</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">47</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">81</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">33</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">114</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">35</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">52</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">qmemcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rflag<span class=\"token punctuation\">[</span><span class=\"token number\">36</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3S1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">41</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">42</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">54</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">43</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">44</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">44</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Input flag: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">(</span>__isoc99_scanf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%63s\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">45</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Nu1Lctf233\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// key为密钥</span>\n    <span class=\"token function\">RC4_crypto</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> v7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 加密函数，调用了三个参数，</span>\n                                          <span class=\"token comment\">//对于RC4来说第一个参数为密钥，第二个参</span>\n                                          <span class=\"token comment\">//数为s盒，第三个参数为指针装加密后的明文</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">44</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v7<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> rflag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GG!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Congratulations!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GG!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>为了方便这里的函数直接重命名了，然后跟踪<code>RC4_func</code>函数：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">RC4_func</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">,</span> __int64 a2<span class=\"token punctuation\">,</span> __int64 a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">char</span> v5<span class=\"token punctuation\">[</span><span class=\"token number\">264</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-110h] BYREF</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+128h] [rbp-8h]</span>\n\n  v6 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">rc4_init</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                             <span class=\"token comment\">// S盒的初始化</span>\n  <span class=\"token function\">rc4_crypt</span><span class=\"token punctuation\">(</span>v5<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// rc4的加密函数</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到这个函数的功能就是基本的调用两个函数来进行rc4加密</p>\n<p>先看S盒的初始化函数<code>rc4_init</code>：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">rc4_init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> __int64 a2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-10h]</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+14h] [rbp-Ch]</span>\n  <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+18h] [rbp-8h]</span>\n  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+1Ch] [rbp-4h]</span>\n\n  v6 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>                  <span class=\"token comment\">// 给s盒赋值</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> a2<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span>                  <span class=\"token comment\">// 通过key来打乱s盒</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> a2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> v3 <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span>j <span class=\"token operator\">%</span> v6<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a2 <span class=\"token operator\">+</span> v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>加密函数<code>rc4_crypt</code>：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">sub_400753</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> __int64 a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+24h] [rbp-1Ch]</span>\n  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-18h]</span>\n  <span class=\"token class-name\">size_t</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+30h] [rbp-10h]</span>\n  <span class=\"token class-name\">size_t</span> v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+38h] [rbp-8h]</span>\n\n  v5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v7 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n  v8 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token operator\">&lt;</span> v8 <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">+</span> v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>a3 <span class=\"token operator\">+</span> v7<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> a2<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">++</span>v7<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这个题其实是为了熟悉RC4算法在逆向里的表现特征，理解函数的作用，根据RC4的体征来说，因为异或的特点加密与解密使用的是同一个函数，所以只要知道了key就可以直接解出这个题的flag。</p>\n<h2 id=\"3-EXP：\"><a href=\"#3-EXP：\" class=\"headerlink\" title=\"3.EXP：\"></a>3.EXP：</h2><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">v8 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xc6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xca</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbf</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xee</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa2</span><span class=\"token punctuation\">,</span>\n     <span class=\"token number\">0xc1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xeb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xcc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span>\n     <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xca</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xec</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd4</span><span class=\"token punctuation\">]</span>\n\ns <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>       #输出加密后的明文\n    s<span class=\"token operator\">+=</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加密后的明文为：%s\"</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">)</span>\n\nkey<span class=\"token operator\">=</span> <span class=\"token string\">\"Nu1Lctf233\"</span>        #因题目而异\ns_box <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">256</span>\nt_box <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">256</span>\nflag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\n\ns_box <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    #S盒的初始化\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    t_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   #生成临时变量T盒\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"原来的 s 盒：%s\"</span> <span class=\"token operator\">%</span> s_box<span class=\"token punctuation\">)</span>\n\nv3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>                    #对S盒进行乱序\n<span class=\"token keyword\">for</span> j in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    v3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>s_box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> v3 <span class=\"token operator\">+</span> t_box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n    # 然后交换两个数\n    s_box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>s_box<span class=\"token punctuation\">[</span>v3<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s_box<span class=\"token punctuation\">[</span>v3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>s_box<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>   #对S盒进行乱序\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"乱序后的 s 盒：%s\"</span> <span class=\"token operator\">%</span> s_box<span class=\"token punctuation\">)</span>\n\n        \nv5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nv6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nv7 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>v7 <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>           #加解密部分\n    v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">+</span> s_box<span class=\"token punctuation\">[</span>v5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n    s_box<span class=\"token punctuation\">[</span>v5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>s_box<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s_box<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>s_box<span class=\"token punctuation\">[</span>v5<span class=\"token punctuation\">]</span>    # 交换\n    flag <span class=\"token operator\">+=</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> s_box<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>s_box<span class=\"token punctuation\">[</span>v5<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> s_box<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    v7 <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"解密后的密文为：%s\"</span> <span class=\"token operator\">%</span>flag<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220315214621588.png\" alt=\"image-20220315214621588\"></p>\n<p>n1book{us1nG_f3atur3s_7o_de7erm1n3_4lg0ri7hm}</p>\n","feature":false,"text":"从0到1例题：BabyAlgorithm1.基本信息探查：ELF文件，64位，无壳 2.IDA分析：跟踪到主函数： __int64 __fastcall main(int a1, char **a2, char **a3) &#123; __int64 result; // ra...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":4,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":6,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":3,"path":"api/tags/算法实例分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%8E0%E5%88%B01%E4%BE%8B%E9%A2%98%EF%BC%9ABabyAlgorithm\"><span class=\"toc-text\">从0到1例题：BabyAlgorithm</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E6%8E%A2%E6%9F%A5%EF%BC%9A\"><span class=\"toc-text\">1.基本信息探查：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-IDA%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">2.IDA分析：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-EXP%EF%BC%9A\"><span class=\"toc-text\">3.EXP：</span></a></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"RC4逆向题实例2","uid":"87051f2935618f834bb08259aaf81b3c","slug":"RC4逆向题实例2","date":"2022-03-15T17:11:29.000Z","updated":"2022-03-15T17:21:45.518Z","comments":true,"path":"api/articles/RC4逆向题实例2.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/huoyin.jpg","text":"2021绿城杯eazy re1.基本信息探查：1.EXEinfo：无壳，32位 2.运行一下：看到字符串“Hello, this is my world.If you want flag, give me something I like.” 然后就是输入flag 2.IDA分析...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":4,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":6,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":3,"path":"api/tags/算法实例分析.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"RC4算法分析及逆向特征","uid":"a9a1a1638fa879e93ed0cd1f92852131","slug":"RC4算法分析及逆向特征","date":"2022-03-15T10:47:14.000Z","updated":"2022-03-15T12:35:10.195Z","comments":true,"path":"api/articles/RC4算法分析及逆向特征.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/luomiou1.png","text":"RC4算法分析一、RC4简介：RC4加密算法是密钥长度可变的流加密算法，其实就是生成一个密钥，然后去和明文XOR ，它还有一个特点就是它的密钥长度是可变的，范围是(1~256)字节。由此可以看出RC4算法的强度完全依赖于密钥的强度，如果获得密钥基本就可以直接获得明文。 二、算法原...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Crypto","slug":"Crypto","count":3,"path":"api/categories/Crypto.json"}],"tags":[{"name":"reverse常见算法","slug":"reverse常见算法","count":2,"path":"api/tags/reverse常见算法.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}