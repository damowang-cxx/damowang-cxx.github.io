{"title":"2022年2月SUSCTF比赛记录","uid":"9c74912da0a2a9c3bea7b6b4717c1a49","slug":"比赛记录/2022年2月SUSCTF比赛记录","date":"2022-03-14T13:33:40.000Z","updated":"2022-03-22T11:14:17.821Z","comments":true,"path":"api/articles/比赛记录/2022年2月SUSCTF比赛记录.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/IMG_20220322_185517.jpg","content":"<table>\n<thead>\n<tr>\n<th>Reverse</th>\n<th>考点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DigitalCircuits</td>\n<td>exe→py，tea</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"DigitalCircuits\"><a href=\"#DigitalCircuits\" class=\"headerlink\" title=\"DigitalCircuits\"></a>DigitalCircuits</h1><h2 id=\"exe→py\"><a href=\"#exe→py\" class=\"headerlink\" title=\"exe→py:\"></a>exe→py:</h2><p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220314231649352.png\" alt=\"image-20220314231649352\"></p>\n<p>只要一看到这个图标就晓得大概率是py文件被打包成了exe，而且一般打包后的文件较大。直接用脚本解包。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">pyinstxtractor<span class=\"token punctuation\">.</span>py DigitalCircuits<span class=\"token punctuation\">.</span>exe<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220314231711537.png\" alt=\"image-20220314231711537\"></p>\n<p>找到pyc文件之后在线网站反汇编就行</p>\n<h2 id=\"算法分析：\"><a href=\"#算法分析：\" class=\"headerlink\" title=\"算法分析：\"></a>算法分析：</h2><h3 id=\"总体预览：\"><a href=\"#总体预览：\" class=\"headerlink\" title=\"总体预览：\"></a>总体预览：</h3><p>反汇编后的代码为：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#<span class=\"token operator\">!</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>env python\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">visit</span> <span class=\"token expression\">https<span class=\"token operator\">:</span></span><span class=\"token comment\">//tool.lu/pyc/ for more information</span></span>\nimport time\n\ndef <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span> and b <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span><span class=\"token operator\">:</span>      <span class=\"token comment\">//相当于，按位与操作</span>\n        <span class=\"token keyword\">return</span> <span class=\"token char\">'1'</span>\n    <span class=\"token keyword\">return</span> <span class=\"token char\">'0'</span>\n\ndef <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> <span class=\"token char\">'0'</span> and b <span class=\"token operator\">==</span> <span class=\"token char\">'0'</span><span class=\"token operator\">:</span>     <span class=\"token comment\">//相当于，按位或操作</span>\n        <span class=\"token keyword\">return</span> <span class=\"token char\">'0'</span>\n    <span class=\"token keyword\">return</span> <span class=\"token char\">'1'</span>\n\ndef <span class=\"token function\">f3</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>                        <span class=\"token comment\">//相当于，按位非操作</span>\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token char\">'0'</span>\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> <span class=\"token char\">'0'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token char\">'1'</span>\n\ndef <span class=\"token function\">f4</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token function\">f3</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token function\">f3</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//相当于，按位异或操作</span>\n\ndef <span class=\"token function\">f5</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    s <span class=\"token operator\">=</span> <span class=\"token function\">f4</span><span class=\"token punctuation\">(</span><span class=\"token function\">f4</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span>\n    c <span class=\"token operator\">=</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n\ndef <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    ans <span class=\"token operator\">=</span> <span class=\"token char\">''</span>\n    z <span class=\"token operator\">=</span> <span class=\"token char\">'0'</span>\n    a <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token operator\">::</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span><span class=\"token operator\">::</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        ans <span class=\"token operator\">+=</span> <span class=\"token function\">f5</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        z <span class=\"token operator\">=</span> <span class=\"token function\">f5</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">[</span><span class=\"token operator\">::</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\ndef <span class=\"token function\">f7</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>                         <span class=\"token comment\">//按位左移</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">[</span>n<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">*</span> n\n\ndef <span class=\"token function\">f8</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>                         <span class=\"token comment\">//按位右移</span>\n    <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span>n<span class=\"token punctuation\">]</span>\n\ndef <span class=\"token function\">f9</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    ans <span class=\"token operator\">=</span> <span class=\"token char\">''</span>\n    <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        ans <span class=\"token operator\">+=</span> <span class=\"token function\">f4</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> ans\n\ndef <span class=\"token function\">f10</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> k0<span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">,</span> k3<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    s <span class=\"token operator\">=</span> <span class=\"token char\">'00000000000000000000000000000000'</span>\n    d <span class=\"token operator\">=</span> <span class=\"token char\">'10011110001101110111100110111001'</span>\n    <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        s <span class=\"token operator\">=</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span>\n        v0 <span class=\"token operator\">=</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> <span class=\"token function\">f9</span><span class=\"token punctuation\">(</span><span class=\"token function\">f9</span><span class=\"token punctuation\">(</span><span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token function\">f7</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token function\">f8</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        v1 <span class=\"token operator\">=</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> <span class=\"token function\">f9</span><span class=\"token punctuation\">(</span><span class=\"token function\">f9</span><span class=\"token punctuation\">(</span><span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token function\">f7</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token function\">f8</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> v0 <span class=\"token operator\">+</span> v1\n\nk0 <span class=\"token operator\">=</span> <span class=\"token char\">'0100010001000101'</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//zfill() 方法返回指定长度的字符串，原字符串右对齐，前面填充0。</span>\nk1 <span class=\"token operator\">=</span> <span class=\"token char\">'0100000101000100'</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\nk2 <span class=\"token operator\">=</span> <span class=\"token char\">'0100001001000101'</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\nk3 <span class=\"token operator\">=</span> <span class=\"token char\">'0100010101000110'</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\nflag <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token char\">'please input flag:'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'SUSCTF&#123;'</span> or flag<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'&#125;'</span><span class=\"token operator\">:</span>      <span class=\"token comment\">//判断输入是否为SUSCTF&#123;&#125;包裹</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>'Error<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>The formate of flag is SUSCTF<span class=\"token punctuation\">&#123;</span>XXX<span class=\"token punctuation\">&#125;</span>'<span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nflagstr <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">24</span><span class=\"token operator\">:</span>                <span class=\"token comment\">//实际flag长度为24</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'Error!!!The length of flag 24'</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> <span class=\"token char\">''</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>    <span class=\"token comment\">//加密</span>\n    v0 <span class=\"token operator\">=</span> flagstr<span class=\"token punctuation\">[</span>i<span class=\"token operator\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n    v0 <span class=\"token operator\">=</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    v1 <span class=\"token operator\">=</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    res <span class=\"token operator\">+=</span> <span class=\"token function\">f10</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> k0<span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">,</span> k3<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> res <span class=\"token operator\">==</span> '<span class=\"token number\">001111101000100101000111110010111100110010010100010001100011100100110001001101011000001110001000001110110000101101101000100100111101101001100010011100110110000100111011001011100110010000100111</span>'<span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'True'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'False'</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的难点就是识别加密算法，前面之所以定义这么多函数就是掩盖其加密算法的特征，从函数走向分析每一个for的用处(看注释)，分析78行到82行的加密循环</p>\n<h3 id=\"加密循环分析：\"><a href=\"#加密循环分析：\" class=\"headerlink\" title=\"加密循环分析：\"></a>加密循环分析：</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>    <span class=\"token comment\">//加密</span>\n    v0 <span class=\"token operator\">=</span> flagstr<span class=\"token punctuation\">[</span>i<span class=\"token operator\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n    v0 <span class=\"token operator\">=</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    v1 <span class=\"token operator\">=</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>flagstr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    res <span class=\"token operator\">+=</span> <span class=\"token function\">f10</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> k0<span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">,</span> k3<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><a href=\"https://www.notion.so/bin-f80a0f4c76314ae48c883ad8846a971b\">bin函数特征</a></p>\n<ul>\n<li>每轮循环的v0都是flag的值，每次存4个元素</li>\n<li>通过bin函数以字符串的形式返回每个元素二进制表达形式<ul>\n<li>但是bin函数会自作主张的在前面加上0b，所以通过[2:]来切片将0b去掉</li>\n<li>再通过zfill补充去掉的前两位</li>\n</ul>\n</li>\n<li>for循环一次做8个元素，前四个元素放在了放在v0，后四个元素放在v1</li>\n<li>v0和v1都是以字符串的形式保存这元素的二进制表达</li>\n<li>调用f10加密函数，参数为v0，v1和四个key</li>\n</ul>\n<p>这里分析一下特征：密钥为128位，明文总共64位，分成两个32位</p>\n<p>符合这个条件的为TEA加密算法。</p>\n<p>为了进一步确认，分析f10函数：</p>\n<h3 id=\"f10-函数：-TEA加密函数\"><a href=\"#f10-函数：-TEA加密函数\" class=\"headerlink\" title=\"f10()函数：(TEA加密函数)\"></a>f10()函数：(TEA加密函数)</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">def <span class=\"token function\">f10</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> k0<span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">,</span> k3<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    s <span class=\"token operator\">=</span> <span class=\"token char\">'00000000000000000000000000000000'</span>\n    d <span class=\"token operator\">=</span> <span class=\"token char\">'10011110001101110111100110111001'</span>\n    <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        s <span class=\"token operator\">=</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span>\n        v0 <span class=\"token operator\">=</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> <span class=\"token function\">f9</span><span class=\"token punctuation\">(</span><span class=\"token function\">f9</span><span class=\"token punctuation\">(</span><span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token function\">f7</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token function\">f8</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        v1 <span class=\"token operator\">=</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> <span class=\"token function\">f9</span><span class=\"token punctuation\">(</span><span class=\"token function\">f9</span><span class=\"token punctuation\">(</span><span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token function\">f7</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f6</span><span class=\"token punctuation\">(</span><span class=\"token function\">f8</span><span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>定义两个变量：分别为s和d，联想到TEA加密算法也是同样的做法(定义sum和detal两个变量)，delta变量放着的是黄黄金分割律数字转换的一个数字 2654435769 （0x9E3779B9）,但这个函数是用二进制的形式表达的计算机换算一下</p>\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220314231733654.png\" alt=\"image-20220314231733654\"></p>\n<p>这里就可以锁定加密算法使用的是TEA了</p>\n<p>确认算法后就可以直接写解密脚本了：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">def <span class=\"token function\">TeaDecode</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    v0 <span class=\"token operator\">=</span> enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    v1 <span class=\"token operator\">=</span> enc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>delta <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFFFFFF</span>\n    <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        v1 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        v1 <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0xFFFFFFFF</span>\n        v0 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        v0 <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0xFFFFFFFF</span>\n        n <span class=\"token operator\">-=</span> delta\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span>\n\nenflag <span class=\"token operator\">=</span> '<span class=\"token number\">001111101000100101000111110010111100110010010100010001100011100100110001001101011000001110001000001110110000101101101000100100111101101001100010011100110110000100111011001011100110010000100111</span>'\nenflag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>enflag<span class=\"token punctuation\">[</span>i<span class=\"token operator\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>enflag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\nk <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span>\nk<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token char\">'0100010001000101'</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>    #<span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>字符串或数字<span class=\"token punctuation\">,</span>进制<span class=\"token punctuation\">(</span>默认<span class=\"token number\">10</span>进制<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nk<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token char\">'0100000101000100'</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nk<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token char\">'0100001001000101'</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nk<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token char\">'0100010101000110'</span><span class=\"token punctuation\">.</span><span class=\"token function\">zfill</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ndelta <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token char\">'10011110001101110111100110111001'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\nflag <span class=\"token operator\">=</span> b<span class=\"token char\">''</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>enflag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>        #第三个参数为步进值\n    ans <span class=\"token operator\">=</span> <span class=\"token function\">TeaDecode</span><span class=\"token punctuation\">(</span>enflag<span class=\"token punctuation\">[</span>i<span class=\"token operator\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n    flag <span class=\"token operator\">+=</span> ans<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'big'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> ans<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'big'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token char\">'SUSCTF&#123;'</span> <span class=\"token operator\">+</span> flag <span class=\"token operator\">+</span> b<span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","feature":true,"text":" Reverse 考点 DigitalCircuits exe→py，tea DigitalCircuitsexe→py: 只要一看到这个图标就晓得大概率是py文件被打包成了exe，而且一般打包后的文件较大。直接用脚本解包。 pyinstxtractor.py DigitalCi...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"比赛记录","slug":"比赛记录","count":2,"path":"api/categories/比赛记录.json"}],"tags":[{"name":"WP","slug":"WP","count":11,"path":"api/tags/WP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#DigitalCircuits\"><span class=\"toc-text\">DigitalCircuits</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#exe%E2%86%92py\"><span class=\"toc-text\">exe→py:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">算法分析：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E4%BD%93%E9%A2%84%E8%A7%88%EF%BC%9A\"><span class=\"toc-text\">总体预览：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E5%AF%86%E5%BE%AA%E7%8E%AF%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">加密循环分析：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#f10-%E5%87%BD%E6%95%B0%EF%BC%9A-TEA%E5%8A%A0%E5%AF%86%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">f10()函数：(TEA加密函数)</span></a></li></ol></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"mapped":true,"prev_post":{"title":"2022年2月PragyanCTF比赛记录","uid":"dbf28d0c1562fa16371756c5d1c38cce","slug":"比赛记录/2022年2月PragyanCTF比赛记录","date":"2022-03-14T16:50:11.000Z","updated":"2022-03-16T00:54:21.730Z","comments":true,"path":"api/articles/比赛记录/2022年2月PragyanCTF比赛记录.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/IMG_20210927_062014.jpg","text":" Reverse 考点 Oak java源代码，算法逆向 Oak 题目描述 Just little understanding of java would be enough Oak.class。 源代码： // // Source code recreated from a ....","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"比赛记录","slug":"比赛记录","count":2,"path":"api/categories/比赛记录.json"}],"tags":[{"name":"WP","slug":"WP","count":11,"path":"api/tags/WP.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":true},"next_post":{"title":"伪随机数的逆向中的应用","uid":"b987f7dbe9c05bec0f7dc95b74539bc9","slug":"Reverse/伪随机数的逆向中的应用","date":"2022-03-21T14:33:28.000Z","updated":"2022-03-21T14:47:20.916Z","comments":true,"path":"api/articles/Reverse/伪随机数的逆向中的应用.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/nullb93dc7ca5eee2.jpg","text":"1.伪随机数介绍：1.伪随机数的运行机制：假设有a1=f(seed) ，an+1=f(an)，那么就可以得到一个序列a1，a2，a3...an 制作一个伪随机数也就是让其每次返回序列的下一个元素，如图： 对于java.utiol.Random，比较老的C语言的rand()库，和一...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":10,"path":"api/categories/Reverse.json"}],"tags":[{"name":"C","slug":"C","count":1,"path":"api/tags/C.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false}}