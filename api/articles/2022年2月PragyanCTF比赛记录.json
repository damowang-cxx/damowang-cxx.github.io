{"title":"2022年2月PragyanCTF比赛记录","uid":"dbf28d0c1562fa16371756c5d1c38cce","slug":"2022年2月PragyanCTF比赛记录","date":"2022-03-14T16:50:11.000Z","updated":"2022-03-15T05:57:28.136Z","comments":true,"path":"api/articles/2022年2月PragyanCTF比赛记录.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/IMG_20210927_062014.jpg","content":"<table>\n<thead>\n<tr>\n<th>Reverse</th>\n<th>考点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Oak</td>\n<td>java源代码，算法逆向</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"Oak\"><a href=\"#Oak\" class=\"headerlink\" title=\"Oak\"></a>Oak</h1><ul>\n<li><p>题目描述</p>\n<p>Just little understanding of java would be enough Oak.class。</p>\n</li>\n</ul>\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220315005728919.png\" alt=\"image-20220315005728919\"></p>\n<ul>\n<li><p>源代码：</p>\n  <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token comment\">//</span>\n<span class=\"token comment\">// Source code recreated from a .class file by IntelliJ IDEA</span>\n<span class=\"token comment\">// (powered by FernFlower decompiler)</span>\n<span class=\"token comment\">//</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Oak</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">28767L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24418L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25470L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29771L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26355L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31349L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13032L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30456L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14663L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27592L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8916L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29409L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7348L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17474L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5124L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3345L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49357L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61058L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65159L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53773L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67886L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72426L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103728L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">158125L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">179542L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166504L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">212101L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">282674L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">320873L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">329272L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400021L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">479881L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">535081L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">599886L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">662294L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">731441L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">831284L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">947032L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1021482L</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Oak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>var0 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> var1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var0<span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"falg\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Usage: [flag]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Correct!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Incorrect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">conv</span><span class=\"token punctuation\">(</span>String var0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>var2<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>var2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>         <span class=\"token comment\">//var1的各元素有falg字符串的当前元素左移8位和后面一个元素取余串长组成</span>\n\n        <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> boolean <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>String var0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token function\">conv</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> var1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token function\">t</span><span class=\"token punctuation\">(</span>var2 <span class=\"token operator\">*</span> var2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"解体思路：\"><a href=\"#解体思路：\" class=\"headerlink\" title=\"解体思路：\"></a>解体思路：</h3><ol>\n<li>main函数判断输入，要求输入一个flag，而且只能输入一个字符串</li>\n</ol>\n<p><img src=\"/Oak%20c1224/Untitled%201.png\" alt=\"Untitled\"></p>\n<ol>\n<li><p>加密后的数据存在了data里面</p>\n <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">28767L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24418L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25470L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29771L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26355L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31349L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13032L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30456L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14663L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27592L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8916L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29409L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7348L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17474L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5124L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3345L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49357L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61058L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65159L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53773L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67886L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72426L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103728L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">158125L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">179542L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166504L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">212101L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">282674L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">320873L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">329272L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400021L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">479881L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">535081L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">599886L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">662294L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">731441L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">831284L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">947032L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1021482L</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>随后调用check函数</p>\n <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> boolean <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>String var0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token function\">conv</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> var1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token function\">t</span><span class=\"token punctuation\">(</span>var2 <span class=\"token operator\">*</span> var2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p> 大致思路分两块，第一块将输入的flag传到conv函数变形，然后与t函数返回值进行异或操作，最后与data里的值判断是否相等</p>\n</li>\n<li><p>所以先逆t函数：</p>\n <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>var0 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> var1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p> t函数又调用了t_helper函数</p>\n <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p> 看似复杂其实可以注意到传到t函数的值实际上是死的，分析它没有任何意义，逆向算法时直接照搬就行</p>\n</li>\n<li><p>接着分析第一块：</p>\n <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">conv</span><span class=\"token punctuation\">(</span>String var0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>var2<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>var2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>         <span class=\"token comment\">//var1的各元素有falg字符串的当前元素左移8位和后面一个元素取余串长组成</span>\n\n        <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p> 一开始的思路是从最后元素逆推回来，但是很麻烦，这里其实可以利用位运算的特性直接解，因为每个加密后的元素是先左移8位在加上后面那个未加密的元素，那么我们直接把前面八位置零就可以轻松获得后面一位的值用这种方法依次类推，flag就出来了</p>\n</li>\n</ol>\n<h3 id=\"exp编写：\"><a href=\"#exp编写：\" class=\"headerlink\" title=\"exp编写：\"></a>exp编写：</h3><p>逆向思路大概是逆t→与data异或→所有元素除了后8位，其他位置零：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">exp</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">28767L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24418L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25470L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29771L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26355L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31349L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13032L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30456L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14663L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27592L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8916L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29409L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7348L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17474L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5124L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3345L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49357L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61058L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65159L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53773L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67886L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72426L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103728L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">158125L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">179542L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166504L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">212101L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">282674L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">320873L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">329272L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400021L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">479881L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">535081L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">599886L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">662294L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">731441L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">831284L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">947032L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1021482L</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0 <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>var0 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> var1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">t_helper</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">,</span> var1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">conv</span><span class=\"token punctuation\">(</span>String var0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span>var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>var0<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>var2<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>var2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> var0<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>         <span class=\"token comment\">//var1的各元素有falg字符串的当前元素左移8位和后面一个元素取余串长组成</span>\n\n        <span class=\"token keyword\">return</span> var1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> var1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> var2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> var2 <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>var2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token function\">t</span><span class=\"token punctuation\">(</span>var2 <span class=\"token operator\">*</span> var2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>var1<span class=\"token punctuation\">[</span>var2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        \n\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>前面的解密可以用题目的代码，后面<em>置零</em>就用python了：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">flag<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\nrflag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">28767</span><span class=\"token punctuation\">,</span><span class=\"token number\">24419</span><span class=\"token punctuation\">,</span><span class=\"token number\">25460</span><span class=\"token punctuation\">,</span><span class=\"token number\">29798</span><span class=\"token punctuation\">,</span><span class=\"token number\">26235</span><span class=\"token punctuation\">,</span><span class=\"token number\">31536</span><span class=\"token punctuation\">,</span><span class=\"token number\">12402</span><span class=\"token punctuation\">,</span><span class=\"token number\">29233</span><span class=\"token punctuation\">,</span><span class=\"token number\">12647</span><span class=\"token punctuation\">,</span><span class=\"token number\">26417</span><span class=\"token punctuation\">,</span><span class=\"token number\">12654</span><span class=\"token punctuation\">,</span><span class=\"token number\">28212</span><span class=\"token punctuation\">,</span><span class=\"token number\">13436</span><span class=\"token punctuation\">,</span><span class=\"token number\">31839</span><span class=\"token punctuation\">,</span><span class=\"token number\">24430</span><span class=\"token punctuation\">,</span><span class=\"token number\">28224</span><span class=\"token punctuation\">,</span><span class=\"token number\">16461</span><span class=\"token punctuation\">,</span><span class=\"token number\">19763</span><span class=\"token punctuation\">,</span><span class=\"token number\">13101</span><span class=\"token punctuation\">,</span><span class=\"token number\">11568</span><span class=\"token punctuation\">,</span><span class=\"token number\">12390</span><span class=\"token punctuation\">,</span><span class=\"token number\">26207</span><span class=\"token punctuation\">,</span><span class=\"token number\">24394</span><span class=\"token punctuation\">,</span><span class=\"token number\">18996</span><span class=\"token punctuation\">,</span><span class=\"token number\">13430</span><span class=\"token punctuation\">,</span><span class=\"token number\">30273</span><span class=\"token punctuation\">,</span><span class=\"token number\">16735</span><span class=\"token punctuation\">,</span><span class=\"token number\">24407</span><span class=\"token punctuation\">,</span><span class=\"token number\">22369</span><span class=\"token punctuation\">,</span><span class=\"token number\">24885</span><span class=\"token punctuation\">,</span><span class=\"token number\">13663</span><span class=\"token punctuation\">,</span><span class=\"token number\">24360</span><span class=\"token punctuation\">,</span><span class=\"token number\">10281</span><span class=\"token punctuation\">,</span><span class=\"token number\">10543</span><span class=\"token punctuation\">,</span><span class=\"token number\">12124</span><span class=\"token punctuation\">,</span><span class=\"token number\">23676</span><span class=\"token punctuation\">,</span><span class=\"token number\">31804</span><span class=\"token punctuation\">,</span><span class=\"token number\">15485</span><span class=\"token punctuation\">,</span><span class=\"token number\">32112</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">39</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    flag<span class=\"token operator\">+=</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span>rflag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span><span class=\"token number\">127</span><span class=\"token punctuation\">)</span>\n\nt<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\nflag<span class=\"token operator\">=</span>flag<span class=\"token punctuation\">[</span>t<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>flag<span class=\"token punctuation\">[</span><span class=\"token operator\">:</span>t<span class=\"token punctuation\">]</span>      <span class=\"token comment\">//循环右移</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220315010024457.png\" alt=\"image-20220315010024457\"><br>p_ctf{0r1g1n4|n@M3-0f_J4vA_Wa5()&#x2F;|&lt;}</p>\n","feature":true,"text":" Reverse 考点 Oak java源代码，算法逆向 Oak 题目描述 Just little understanding of java would be enough Oak.class。 源代码： // // Source code recreated from a ....","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"比赛记录","slug":"比赛记录","count":2,"path":"api/categories/比赛记录.json"}],"tags":[{"name":"WP","slug":"WP","count":4,"path":"api/tags/WP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Oak\"><span class=\"toc-text\">Oak</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E4%BD%93%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span class=\"toc-text\">解体思路：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#exp%E7%BC%96%E5%86%99%EF%BC%9A\"><span class=\"toc-text\">exp编写：</span></a></li></ol></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"NJCTF2017:messagerWP","uid":"93d43ea1d4ca04bfd8b5b6e2f9278ee0","slug":"NJCTF2017-messagerWP","date":"2022-03-15T05:59:29.000Z","updated":"2022-03-15T06:27:54.369Z","comments":true,"path":"api/articles/NJCTF2017-messagerWP.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/IMG_20210914_235840.jpg","text":"Messager1.环境启动：第一道例题来自2017年的NJCTF，该程序本身就能通过socket进行通信，不需要用socat进行绑定，所以直接运行即可，端口为5555。 $ echo \"Flag&#123;V2VDaGF0X3RoeXNjODMyXlhE&#125;\" > fl...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"PWN","slug":"PWN","count":1,"path":"api/categories/PWN.json"}],"tags":[{"name":"WP","slug":"WP","count":4,"path":"api/tags/WP.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"2022年2月SUSCTF比赛记录","uid":"9c74912da0a2a9c3bea7b6b4717c1a49","slug":"2022年2月SUSCTF比赛记录","date":"2022-03-14T13:33:40.000Z","updated":"2022-03-15T05:57:38.378Z","comments":true,"path":"api/articles/2022年2月SUSCTF比赛记录.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/mmexport1596541463255.jpg","text":" Reverse 考点 DigitalCircuits exe→py，tea DigitalCircuitsexe→py: 只要一看到这个图标就晓得大概率是py文件被打包成了exe，而且一般打包后的文件较大。直接用脚本解包。 pyinstxtractor.py DigitalCi...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"比赛记录","slug":"比赛记录","count":2,"path":"api/categories/比赛记录.json"}],"tags":[{"name":"WP","slug":"WP","count":4,"path":"api/tags/WP.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}