{"title":"TEA逆向题实例2","uid":"12c143595e1666b762946cd5d7f66963","slug":"Reverse/TEA逆向题实例2","date":"2022-03-19T17:38:23.000Z","updated":"2022-03-19T18:06:28.911Z","comments":true,"path":"api/articles/Reverse/TEA逆向题实例2.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/1219302.jpg","content":"<h1 id=\"Creak-Me\"><a href=\"#Creak-Me\" class=\"headerlink\" title=\"Creak Me\"></a>Creak Me</h1><p>2022年HGAME的re</p>\n<h2 id=\"1-基本信息探查：\"><a href=\"#1-基本信息探查：\" class=\"headerlink\" title=\"1.基本信息探查：\"></a>1.基本信息探查：</h2><h3 id=\"1-EXEinfo：\"><a href=\"#1-EXEinfo：\" class=\"headerlink\" title=\"1.EXEinfo：\"></a>1.EXEinfo：</h3><p>32位，无壳</p>\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220320014223159.png\" alt=\"image-20220320014223159\"></p>\n<h3 id=\"2-运行一下：\"><a href=\"#2-运行一下：\" class=\"headerlink\" title=\"2.运行一下：\"></a>2.运行一下：</h3><p>啥也没有</p>\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220320014234052.png\" alt=\"image-20220320014234052\"></p>\n<h2 id=\"2-IDA分析：\"><a href=\"#2-IDA分析：\" class=\"headerlink\" title=\"2.IDA分析：\"></a>2.IDA分析：</h2><p>查看主函数：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span>\n  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span>\n  <span class=\"token keyword\">int</span> v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span>\n  _DWORD v10<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+Ch] [ebp-8Ch] BYREF</span>\n  __int128 v11<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+50h] [ebp-48h]</span>\n  <span class=\"token keyword\">char</span> Arglist<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+70h] [ebp-28h] BYREF</span>\n  <span class=\"token keyword\">int</span> v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+90h] [ebp-8h]</span>\n  <span class=\"token keyword\">int</span> v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+94h] [ebp-4h]</span>\n\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>Arglist<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>Arglist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_40103A</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>Arglist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v10<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v14 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> v14 <span class=\"token operator\">=</span> i <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Arglist<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Arglist<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v13 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n      v3 <span class=\"token operator\">+=</span> <span class=\"token number\">305419896</span><span class=\"token punctuation\">;</span>\n      v5 <span class=\"token operator\">+=</span> v3 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> v6<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v10<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> v6<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v10<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      v6 <span class=\"token operator\">+=</span> v3 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v10<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v10<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">--</span>v7<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v8 <span class=\"token operator\">=</span> v14<span class=\"token punctuation\">;</span>\n    v3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Arglist<span class=\"token punctuation\">[</span>v14<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>Arglist<span class=\"token punctuation\">[</span>v8 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v6<span class=\"token punctuation\">;</span>\n    i <span class=\"token operator\">=</span> v8 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v11<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_402180<span class=\"token punctuation\">;</span>\n  v11<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_402170<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> Arglist<span class=\"token punctuation\">[</span>v3<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v11 <span class=\"token operator\">+</span> v3<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">++</span>v3 <span class=\"token operator\">>=</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">sub_40100C</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right!\"</span><span class=\"token punctuation\">,</span> v10<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">sub_40100C</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong!\"</span><span class=\"token punctuation\">,</span> v10<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>粗略一看发现一串base64的码表： “ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&#x3D;” 一开始还以为考的是base64编码，但是仔细一看就发现不对劲，这个字符串存在v10中，而v10在的29行和30行看起来像是TEA加密，发现这一点后就开始找TEA加密的特征。下面分析这个while循环：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">do</span>\n<span class=\"token punctuation\">&#123;</span>\n  v3 <span class=\"token operator\">+=</span> <span class=\"token number\">305419896</span><span class=\"token punctuation\">;</span>\n  v5 <span class=\"token operator\">+=</span> v3 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> v6<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v10<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> v6<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v10<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v6 <span class=\"token operator\">+=</span> v3 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v10<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v10<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">--</span>v7<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我们所知的TEA一定会有个DELTA变量作为每次异或的值，而v3变量正好也装了一个值，只是转成十六进制后发现值并不是所熟知的0x9E3779B9，而是0x12345678,而且第四第五行也有所改动，多异或了一个v3，正常的加密过程为：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">x <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ny <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Key<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Key<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>可以看到一般的tea加密key的下标分别为0123，解密为2301，而这里刚好翻过来了，加密用的2301，那么解密的exp应该为0123。</p>\n<p>分析到这基本确定这就是一个魔改了的TEA加密，直接写exp就行。</p>\n<ul>\n<li><p>修改变量后的main函数</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">int</span> Delta<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span>\n  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span>\n  <span class=\"token keyword\">int</span> v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// esi</span>\n  _DWORD key<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+Ch] [ebp-8Ch] BYREF</span>\n  __int128 rflag<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+50h] [ebp-48h]</span>\n  <span class=\"token keyword\">char</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+70h] [ebp-28h] BYREF</span>\n  <span class=\"token keyword\">int</span> v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+90h] [ebp-8h]</span>\n  <span class=\"token keyword\">int</span> v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+94h] [ebp-4h]</span>\n\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_40103A</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>key<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Delta <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v14 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span> v14 <span class=\"token operator\">=</span> i <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>flag<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v13 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n      Delta <span class=\"token operator\">+=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span>\n      v5 <span class=\"token operator\">+=</span> Delta <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>Delta <span class=\"token operator\">+</span> v6<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> v6<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      v6 <span class=\"token operator\">+=</span> Delta <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>Delta <span class=\"token operator\">+</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">--</span>v7<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v8 <span class=\"token operator\">=</span> v14<span class=\"token punctuation\">;</span>\n    Delta <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>flag<span class=\"token punctuation\">[</span>v14<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>flag<span class=\"token punctuation\">[</span>v8 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v6<span class=\"token punctuation\">;</span>\n    i <span class=\"token operator\">=</span> v8 <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_402180<span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_402170<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> flag<span class=\"token punctuation\">[</span>Delta<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>rflag <span class=\"token operator\">+</span> Delta<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 退出上面的for循环时这里的Delta变量是置0了的，这里只是单纯的作为一个循环的中间变量</span>\n  <span class=\"token punctuation\">&#123;</span>                                                 <span class=\"token comment\">//还需要注意这里是把rflag转换成unsigned char型一个字节一个字节的注意比较。  </span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">++</span>Delta <span class=\"token operator\">>=</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">sub_40100C</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right!\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">sub_40100C</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong!\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"3-EXP：\"><a href=\"#3-EXP：\" class=\"headerlink\" title=\"3.EXP：\"></a>3.EXP：</h2><p>最后的比较是flag和rflag，跟踪40行的rflag的值，这个值就是加密后的值，提取出来作为密文，四个key值的来源为码表，tea的密钥长度为128，分四节，每节32位，所以码表也要一次取四个字节,但这里需要注意一个小端存储的问题：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token punctuation\">.</span>rdata<span class=\"token operator\">:</span><span class=\"token number\">00402170</span> xmmword_402170  xmmword <span class=\"token number\">65E0F</span><span class=\"token number\">2E3</span>CF9284AABA5A126DAE1FEDE6h\n<span class=\"token punctuation\">.</span>rdata<span class=\"token operator\">:</span><span class=\"token number\">00402170</span>                                         <span class=\"token punctuation\">;</span> DATA XREF<span class=\"token operator\">:</span> _main<span class=\"token operator\">+</span>BD↑r\n<span class=\"token punctuation\">.</span>rdata<span class=\"token operator\">:</span><span class=\"token number\">00402170</span>                                         <span class=\"token punctuation\">;</span> rflag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span>rdata<span class=\"token operator\">:</span><span class=\"token number\">00402180</span> xmmword_402180  xmmword <span class=\"token number\">0</span>ED9CE5ED52EB78C2030C144C48D93488h\n<span class=\"token punctuation\">.</span>rdata<span class=\"token operator\">:</span><span class=\"token number\">00402180</span>                                         <span class=\"token punctuation\">;</span> DATA XREF<span class=\"token operator\">:</span> _main<span class=\"token operator\">+</span>B0↑r\n<span class=\"token punctuation\">.</span>rdata<span class=\"token operator\">:</span><span class=\"token number\">00402180</span>                                         <span class=\"token punctuation\">;</span> rflag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面是给rflag赋值时的data段数据，这里直接shift+e提取出来</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">rflag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">8834</span>D9484C140C03C278EB52EDE59CED\nrflag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> E6ED1FAE6D125ABAAA8492CFE3F2E065<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>一开始的思路是直接人工分成32位一段，但解过解不出来，回到赋值时的源代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">rflag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_402180<span class=\"token punctuation\">;</span>\nrflag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_402170<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> flag<span class=\"token punctuation\">[</span>Delta<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>rflag <span class=\"token operator\">+</span> Delta<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 退出上面的for循环时这里的Delta变量是置0了的，这里只是单纯的作为一个循环的中间变量</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这里有个问题就是值是直接存进去的，考虑到每次加密循环是分成了两个32位操作的，以第一段举例如果我编写exp时想让我写的值存储在内存地址时也为<code>8834D948</code> 那么我应该写成：<code>0x48D93488</code> 。</p>\n<p>也可以理解为提取的数据是先处理了一次小端后，在切分成32位一段，将里面的值在小端一次。</p>\n<p>最后exp为：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">def <span class=\"token function\">TeaDecode</span><span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    v0 <span class=\"token operator\">=</span> enc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    v1 <span class=\"token operator\">=</span> enc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>delta <span class=\"token operator\">*</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFFFFFF</span>\n    <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        v1 <span class=\"token operator\">-=</span> n <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v0 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        v1 <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0xFFFFFFFF</span>\n        v0 <span class=\"token operator\">-=</span> n <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v1 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        v0 <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0xFFFFFFFF</span>\n        n <span class=\"token operator\">-=</span> delta\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span>\n\nrflag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x48D93488</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x030C144C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52EB78C2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xED9CE5ED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE1FEDE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA5A126D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCF9284AA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65E0F2E3</span><span class=\"token punctuation\">]</span>\nflag <span class=\"token operator\">=</span> b<span class=\"token string\">\"\"</span>\nkey <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x44434241</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x48474645</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4C4B4A49</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x504F4E4D</span><span class=\"token punctuation\">]</span>\ndelta <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span>\n\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>rflag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>        #第三个参数为步进值\n    ans <span class=\"token operator\">=</span> <span class=\"token function\">TeaDecode</span><span class=\"token punctuation\">(</span>rflag<span class=\"token punctuation\">[</span>i<span class=\"token operator\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n    flag <span class=\"token operator\">+=</span> ans<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'little'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> ans<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'little'</span><span class=\"token punctuation\">)</span>  #注意这里要以小端的形式转换\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220320014325235.png\" alt=\"image-20220320014325235\"></p>\n<p>hgame{H4ppy_v4c4ti0n!}</p>\n<p>最后贴一下网上的C语言写的exp，感觉用c方便一点</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;Windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdint.h></span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> dic<span class=\"token operator\">=</span><span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">decrypt_tea</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span>v5<span class=\"token punctuation\">,</span>DWORD <span class=\"token operator\">*</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">int32_t</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">32</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token operator\">*</span>v6 <span class=\"token operator\">-=</span> sum <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>dic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>dic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span>v5 <span class=\"token operator\">-=</span> sum <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>v6<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>dic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>dic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v6<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">-=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n    \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"> decrypto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    DWORD cipher<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x48D93488</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x030C144C</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x52EB78C2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xED9CE5ED</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0xAE1FEDE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA5A126D</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0xCF9284AA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65E0F2E3</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        DWORD v5 <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        DWORD v6 <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">decrypt_tea</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>v5<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-4.4s%-4.4s\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v5<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//默认右对齐（+），左对齐为-；因为没有0所以用4.4截断4个字符</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//hgame&#123;H4ppy_v4c4ti0n!&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":false,"text":"Creak Me2022年HGAME的re 1.基本信息探查：1.EXEinfo：32位，无壳 2.运行一下：啥也没有 2.IDA分析：查看主函数： int __cdecl main(int argc, const char **argv, const char **envp) ...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":10,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":11,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Creak-Me\"><span class=\"toc-text\">Creak Me</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E6%8E%A2%E6%9F%A5%EF%BC%9A\"><span class=\"toc-text\">1.基本信息探查：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-EXEinfo%EF%BC%9A\"><span class=\"toc-text\">1.EXEinfo：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">2.运行一下：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-IDA%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">2.IDA分析：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-EXP%EF%BC%9A\"><span class=\"toc-text\">3.EXP：</span></a></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"XTEA逆向题实例","uid":"f1880da365bc82a97f263e42062ae6ee","slug":"Reverse/XTEA逆向题实例","date":"2022-03-19T17:44:25.000Z","updated":"2022-03-19T18:06:27.933Z","comments":true,"path":"api/articles/Reverse/XTEA逆向题实例.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/wallhaven-g8j113.jpg","text":"GoEncryp2021虎符杯的re 1.基本信息探查：1.EXEinfo：64位，无壳 2.运行一下： 2.IDA分析：1.找思路：搜索主函数看到main_main： void __cdecl main_main() &#123; int v0; // edi __int64 ...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":10,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":11,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"TEA逆向题实例1","uid":"3c99ba7146d6d3d9913c0efbdda7fd72","slug":"Reverse/TEA逆向题实例1","date":"2022-03-19T17:32:56.000Z","updated":"2022-03-19T18:06:29.726Z","comments":true,"path":"api/articles/Reverse/TEA逆向题实例1.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/1218249.png","text":"DigitalCircuits2022年SUSCTF的re exe→py: 只要一看到这个图标就晓得大概率是py文件被打包成了exe，而且一般打包后的文件较大。直接用脚本解包。 pyinstxtractor.py DigitalCircuits.exe 找到pyc文件之后在线网站...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":10,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":11,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}