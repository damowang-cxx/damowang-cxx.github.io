{"title":"XXTEA逆向题实例","uid":"a8384dcd7abc1e2fe2e53196d43f1b58","slug":"Reverse/XXTEA逆向题实例","date":"2022-03-19T18:00:29.000Z","updated":"2022-03-28T03:06:09.127Z","comments":true,"path":"api/articles/Reverse/XXTEA逆向题实例.json","keywords":null,"cover":"http://r9eglxl35.hn-bkt.clouddn.com/wallhaven-483vq1.jpg","content":"<h1 id=\"Apacha\"><a href=\"#Apacha\" class=\"headerlink\" title=\"Apacha\"></a>Apacha</h1><p>2021HGAME的re</p>\n<h2 id=\"1-基本信息探查：\"><a href=\"#1-基本信息探查：\" class=\"headerlink\" title=\"1.基本信息探查：\"></a>1.基本信息探查：</h2><h3 id=\"1-EXEinfo：\"><a href=\"#1-EXEinfo：\" class=\"headerlink\" title=\"1.EXEinfo：\"></a>1.EXEinfo：</h3><p>无壳，64位，ELF文件格式</p>\n<p><img src=\"http://r9eglxl35.hn-bkt.clouddn.com/image-20220320020323287.png\"></p>\n<h3 id=\"2-运行一下：\"><a href=\"#2-运行一下：\" class=\"headerlink\" title=\"2.运行一下：\"></a>2.运行一下：</h3><p>输出了一个茶杯，这因该是官方给的一个提示，这个题可能用的是TEA加密</p>\n<p>然后就是输出了一个字符串：“Please input:”</p>\n<p><img src=\"http://r9eglxl35.hn-bkt.clouddn.com/image-20220320020400467.png\" alt=\"image-20220320020400467\"></p>\n<h2 id=\"2-IDA分析：\"><a href=\"#2-IDA分析：\" class=\"headerlink\" title=\"2.IDA分析：\"></a>2.IDA分析：</h2><h3 id=\"1-分析main函数：\"><a href=\"#1-分析main函数：\" class=\"headerlink\" title=\"1.分析main函数：\"></a>1.分析main函数：</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  _DWORD <span class=\"token operator\">*</span>v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span>\n  __int64 i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-48h] BYREF</span>\n  <span class=\"token keyword\">char</span> v7<span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-38h] BYREF</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+38h] [rbp-10h]</span>\n\n  v8 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v6<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  v6<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  v6<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  v6<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_11AA</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">__printf_chk</span><span class=\"token punctuation\">(</span><span class=\"token number\">1LL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Please input: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%35s\"</span><span class=\"token punctuation\">,</span> v7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>v7<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">35</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong length!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v3 <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x8CuLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">35</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n    v3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v7<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_1447</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">,</span> <span class=\"token number\">35LL</span><span class=\"token punctuation\">,</span> v6<span class=\"token punctuation\">,</span> v7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">sub_1550</span><span class=\"token punctuation\">(</span>v3<span class=\"token punctuation\">,</span> <span class=\"token number\">35LL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    :)  Flag is your input.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    :(  Try again.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>题目的思路还是很清晰的，接收flag，判断flag长度是否为35，然后在25行调用一个函数进行flag的加密，最后在26行处调用函数进行flag验证。</p>\n<ul>\n<li><p>修改后的主函数</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>__int64 a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  _DWORD <span class=\"token operator\">*</span>copy_from_flag<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rbx</span>\n  __int64 i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n  <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+0h] [rbp-48h] BYREF</span>\n  <span class=\"token keyword\">char</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+10h] [rbp-38h] BYREF</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+38h] [rbp-10h]</span>\n\n  v8 <span class=\"token operator\">=</span> <span class=\"token function\">__readfsqword</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x28u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  key<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  key<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printf_TEA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                 <span class=\"token comment\">// 输出运行时看到的茶杯</span>\n  <span class=\"token function\">__printf_chk</span><span class=\"token punctuation\">(</span><span class=\"token number\">1LL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Please input: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%35s\"</span><span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">35</span> <span class=\"token punctuation\">)</span>       <span class=\"token comment\">// 判断flag串长</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wrong length!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  copy_from_flag <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x8CuLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">35</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n    copy_from_flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">crypto</span><span class=\"token punctuation\">(</span>copy_from_flag<span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 加密输入的flag</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>copy_from_flag<span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 解密flag</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    :)  Flag is your input.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    :(  Try again.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"2-加密函数分析：\"><a href=\"#2-加密函数分析：\" class=\"headerlink\" title=\"2.加密函数分析：\"></a>2.加密函数分析：</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">crypto</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a2<span class=\"token punctuation\">,</span> __int64 a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r13</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// er9</span>\n  __int64 v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r8</span>\n  <span class=\"token keyword\">unsigned</span> __int8 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// dl</span>\n  __int64 result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n\n  v4 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a1<span class=\"token punctuation\">[</span>a2 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  v5 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v4<span class=\"token punctuation\">;</span>\n  v6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">do</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v6 <span class=\"token operator\">-=</span> <span class=\"token number\">0x61C88647</span><span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> v6 <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> a2 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      v9 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">&#123;</span>\n      v8 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">do</span>\n      <span class=\"token punctuation\">&#123;</span>\n        v5 <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span>v8<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span>v8 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">[</span>v8 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a3 <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>v8 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>v7<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">[</span>v8 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        a1<span class=\"token punctuation\">[</span>v8<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a2 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1LL</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      v9 <span class=\"token operator\">=</span> a2 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>a1 <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v4 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a3 <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v9 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>v7<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> v5<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>a1 <span class=\"token operator\">^</span> v6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>v4 <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v6 <span class=\"token operator\">!=</span> <span class=\"token number\">2654435769</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">52</span> <span class=\"token operator\">/</span> a2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1253254570</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>一开始看到这玩意儿有点蒙，我主要疑惑的地方有两个，第一处是既然是tea的话一定会有Delta值，但v6处按道理应该是作为sum累加delta但是这里是减等<code>0x61C88647</code> ，第二处是37的循环，以目前的加密来看不是简单的TEA而是XXTEA，那么这个循环的次数应该是<code>rounds = 6 + 52/n</code> ，结果这里的数可以说是巨大，下面主要分析这两处：</p>\n<ul>\n<li><p>第一处：</p>\n<p>先看v6的类型为<code>unsigned int</code> ，也就是说v6占32位，然而把<code>0x61C88647</code> 放入计算器就可以发现</p>\n<p><img src=\"http://r9eglxl35.hn-bkt.clouddn.com/image-20220320020449523.png\" alt=\"image-20220320020449523\"></p>\n<p>其实最终存进v6的值就是 <code>0x9E37 79B9</code></p>\n</li>\n<li><p>第二处：</p>\n<p>弄懂了第一处，第二处也就好解释了，这里应该要循环7次，而把v6的值代入可以发现正好也是7次</p>\n</li>\n</ul>\n<p>下面列出改变变量后的加密函数：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token comment\">// len_flag 为 35</span>\n__int64 __fastcall <span class=\"token function\">crypto</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span>flag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> len_flag<span class=\"token punctuation\">,</span> __int64 a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r13</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> z<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> sum<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> e<span class=\"token punctuation\">;</span> <span class=\"token comment\">// er9</span>\n  __int64 p<span class=\"token punctuation\">;</span> <span class=\"token comment\">// r8</span>\n  <span class=\"token keyword\">unsigned</span> __int8 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// dl</span>\n  __int64 result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n\n  v4 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>flag<span class=\"token punctuation\">[</span>len_flag <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// v4 = &amp;flag[34]</span>\n  z <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v4<span class=\"token punctuation\">;</span>                                      <span class=\"token comment\">// z = flag[n - 1]</span>\n  sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                                      <span class=\"token comment\">// sum = 0</span>\n  <span class=\"token keyword\">do</span>\n  <span class=\"token punctuation\">&#123;</span>\n    sum <span class=\"token operator\">-=</span> <span class=\"token number\">1640531527</span><span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// sum -= 0x61C88647</span>\n    e <span class=\"token operator\">=</span> sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>                               <span class=\"token comment\">// e = sum >> 2</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> len_flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      v9 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">&#123;</span>\n      p <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>                                  <span class=\"token comment\">// p=0</span>\n      <span class=\"token keyword\">do</span>\n      <span class=\"token punctuation\">&#123;</span>                                         <span class=\"token comment\">// y = flag[p+1]</span>\n        z <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span>                             <span class=\"token comment\">// z = flag[p]+ ((z>>5)^(y&lt;&lt;2))+((y>>3)^(z&lt;&lt;4)) ^ ((key[(p^e)&amp;3]^z)+(y^sum))</span>\n          <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> flag<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> z<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a3\n                                                                                              <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span>\n                                                                                              <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>p <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span>\n                                                                                 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>p <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// key[(p^e)&amp;3]^z</span>\n        flag<span class=\"token punctuation\">[</span>p<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// flag[p] = z</span>\n                                                <span class=\"token comment\">// p++</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> p <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>len_flag <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1LL</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// while(p!=34)</span>\n      v9 <span class=\"token operator\">=</span> len_flag <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// v9 = 34</span>\n    <span class=\"token punctuation\">&#125;</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> z<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>flag <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// ((z&lt;&lt;4)^(*flag>>3))       y = flag[0] = *flag</span>\n    z <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v4                                     <span class=\"token comment\">// z = flag[n-1]+(((key[(p^e)&amp;3]^z)+(y ^ sum)) ^ ((y&lt;&lt;2)^(z>>5)+((z&lt;&lt;4)^(y>>3)))</span>\n      <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a3 <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v9 <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> z<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>flag <span class=\"token operator\">^</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                                                                          <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">*</span>v4 <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>                                    <span class=\"token comment\">// flag[n-1] = z</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> sum <span class=\"token operator\">!=</span> <span class=\"token number\">2654435769</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">52</span> <span class=\"token operator\">/</span> len_flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1253254570</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 外面是循环7次</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>现在就差一个加密后的值了，这个值可以去比较函数里面找一找。</p>\n<h3 id=\"3-check函数分析：\"><a href=\"#3-check函数分析：\" class=\"headerlink\" title=\"3.check函数分析：\"></a>3.check函数分析：</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span>crypted_flag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">unsigned</span> __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edx</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> len <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span>crypted_flag <span class=\"token operator\">!=</span> dword_5020 <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n  v2 <span class=\"token operator\">=</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v2 <span class=\"token operator\">!=</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>len <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// 4 * 34 + 4  35个4</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v3 <span class=\"token operator\">=</span> crypted_flag<span class=\"token punctuation\">[</span>v2 <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// v3 = flag[1]      flag[34]  </span>\n    v2 <span class=\"token operator\">+=</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">;</span>                                  <span class=\"token comment\">// v2 = 8</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token operator\">!=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>unk_501C <span class=\"token operator\">+</span> v2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// &amp;unk_501C + 8</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>加密后的数据在<code>dword_5020</code> ，双击过去提取里面的数据。</p>\n<h2 id=\"3-EXP：\"><a href=\"#3-EXP：\" class=\"headerlink\" title=\"3.EXP：\"></a>3.EXP：</h2><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DELTA</span> <span class=\"token expression\"><span class=\"token number\">0x9e3779b9</span></span><span class=\"token comment\">//0x61C88647</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0xE74EB323</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xB7A72836</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x59CA6FE2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X967CC5C1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0XE7802674</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X3D2D54E6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X8A9D0356</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X99DCC39C</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X7026D8ED</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6A33FDAD</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xF496550A</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5C9C6F9E</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1BE5D04C</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6723AE17</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5270A5C2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xAC42130A</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x84BE67B2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x705CC779</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5C513D98</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xFB36DA2D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x22179645</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5CE3529D</span><span class=\"token punctuation\">,</span><span class=\"token number\">0XD189E1FB</span><span class=\"token punctuation\">,</span><span class=\"token number\">0XE85BD489</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X73C8D11F</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X54B5C196</span><span class=\"token punctuation\">,</span><span class=\"token number\">0XB67CB490</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X2117E4CA</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X9DE3F994</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X2F5AA1AA</span><span class=\"token punctuation\">,</span><span class=\"token number\">0XA7E801FD</span><span class=\"token punctuation\">,</span><span class=\"token number\">0XC30D6EAB</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X1BADDC9C</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X3453B04A</span><span class=\"token punctuation\">,</span><span class=\"token number\">0X92A406F9</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>rounds<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">35</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    rounds <span class=\"token operator\">=</span> <span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">52</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rounds<span class=\"token operator\">*</span>DELTA<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">do</span>                 <span class=\"token comment\">//0x9E3779B9*(52/35)-0x4AB325AA，测试来要循环7次</span>\n     <span class=\"token punctuation\">&#123;</span>\n        e <span class=\"token operator\">=</span> sum <span class=\"token operator\">>></span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>p<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>p<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//34次循环</span>\n        <span class=\"token punctuation\">&#123;</span>\n            z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z<span class=\"token operator\">>></span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">>></span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>z<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">^</span>e<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>z<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">^</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">;</span>\n            y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        z <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">^</span>e<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>z<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">^</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>z<span class=\"token operator\">>></span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">>></span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">;</span>\n        y <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">-</span>DELTA<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>rounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"http://r9eglxl35.hn-bkt.clouddn.com/image-20220320020503271.png\" alt=\"image-20220320020503271\"></p>\n<p>hgame{l00ks_1ike_y0u_f0Und_th3_t34}</p>\n","feature":false,"text":"Apacha2021HGAME的re 1.基本信息探查：1.EXEinfo：无壳，64位，ELF文件格式 2.运行一下：输出了一个茶杯，这因该是官方给的一个提示，这个题可能用的是TEA加密 然后就是输出了一个字符串：“Please input:” 2.IDA分析：1.分析main...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":11,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":12,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Apacha\"><span class=\"toc-text\">Apacha</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E6%8E%A2%E6%9F%A5%EF%BC%9A\"><span class=\"toc-text\">1.基本信息探查：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-EXEinfo%EF%BC%9A\"><span class=\"toc-text\">1.EXEinfo：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">2.运行一下：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-IDA%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">2.IDA分析：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%86%E6%9E%90main%E5%87%BD%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">1.分析main函数：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%8A%A0%E5%AF%86%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">2.加密函数分析：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-check%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">3.check函数分析：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-EXP%EF%BC%9A\"><span class=\"toc-text\">3.EXP：</span></a></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"http://r9eglxl35.hn-bkt.clouddn.com/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"mapped":true,"prev_post":{"title":"z3约束器的使用","uid":"e0074d9f1f3fd35e88318f2b9f6e1fe1","slug":"Python/z3约束器的使用","date":"2022-03-21T14:11:13.000Z","updated":"2022-03-28T03:06:09.144Z","comments":true,"path":"api/articles/Python/z3约束器的使用.json","keywords":null,"cover":"http://r9eglxl35.hn-bkt.clouddn.com/wallhaven-9mx.jpg","text":"Z3约束器1.Z3约束器简介：1.Z3约束器是干啥的？z3是由微软公司开发的一个优秀的SMT求解器，它能够检查逻辑表达式的可满足性，通俗的来讲我们可以简单理解为它是一个解方程的计算器 使用文档 官方使用文档：&lt;https://rise4fun.com/z3/tutorial...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"python库","slug":"python库","count":2,"path":"api/tags/python库.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"http://r9eglxl35.hn-bkt.clouddn.com/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false},"next_post":{"title":"XTEA逆向题实例","uid":"f1880da365bc82a97f263e42062ae6ee","slug":"Reverse/XTEA逆向题实例","date":"2022-03-19T17:44:25.000Z","updated":"2022-03-28T03:06:09.127Z","comments":true,"path":"api/articles/Reverse/XTEA逆向题实例.json","keywords":null,"cover":"http://r9eglxl35.hn-bkt.clouddn.com/wallhaven-g8j113.jpg","text":"GoEncryp2021虎符杯的re 1.基本信息探查：1.EXEinfo：64位，无壳 2.运行一下： 2.IDA分析：1.找思路：搜索主函数看到main_main： void __cdecl main_main() &#123; int v0; // edi __int64 ...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":11,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":12,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"http://r9eglxl35.hn-bkt.clouddn.com/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false}}