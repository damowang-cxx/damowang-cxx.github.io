{"title":"RC4逆向题实例2","uid":"87051f2935618f834bb08259aaf81b3c","slug":"Reverse/RC4逆向题实例2","date":"2022-03-15T17:11:29.000Z","updated":"2022-04-03T09:44:20.540Z","comments":true,"path":"api/articles/Reverse/RC4逆向题实例2.json","keywords":null,"cover":"https://s2.loli.net/2022/04/03/lcGIKeYoQzdSgam.png","content":"<h1 id=\"2021绿城杯eazy-re\"><a href=\"#2021绿城杯eazy-re\" class=\"headerlink\" title=\"2021绿城杯eazy re\"></a>2021绿城杯eazy re</h1><p>这是一个稍微魔改了一下的RC4.</p>\n<h1 id=\"1-基本信息探查：\"><a href=\"#1-基本信息探查：\" class=\"headerlink\" title=\"1.基本信息探查：\"></a>1.基本信息探查：</h1><h2 id=\"1-EXEinfo：\"><a href=\"#1-EXEinfo：\" class=\"headerlink\" title=\"1.EXEinfo：\"></a>1.EXEinfo：</h2><p>无壳，32位</p>\n<img src=\"https://s2.loli.net/2022/04/03/5J1nw4D6KAiqbuT.png\" alt=\"image-20220403173654154\" style=\"zoom:80%;\" />\n\n<h2 id=\"2-运行一下：\"><a href=\"#2-运行一下：\" class=\"headerlink\" title=\"2.运行一下：\"></a>2.运行一下：</h2><p>看到字符串“Hello, this is my world.If you want flag, give me something I like.”</p>\n<p>然后就是输入flag</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/8hS7J6ytaQDzWv3.png\" alt=\"image-20220403174225041\"></p>\n<h1 id=\"2-IDA分析：\"><a href=\"#2-IDA分析：\" class=\"headerlink\" title=\"2.IDA分析：\"></a>2.IDA分析：</h1><h2 id=\"1-去花指令\"><a href=\"#1-去花指令\" class=\"headerlink\" title=\"1.去花指令\"></a>1.去花指令</h2><p>先是找到main函数，然后准备F5时，发现反汇编失败了：</p>\n<img src=\"https://s2.loli.net/2022/04/03/WIodfqcl8RJTxu6.png\" alt=\"image-20220403174239362\" style=\"zoom:80%;\" />\n\n<p>百度了一下这里加了花指令：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">00401056</span>                 xor     eax<span class=\"token punctuation\">,</span> eax\n<span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">00401058</span>                 jz      <span class=\"token keyword\">short</span> near ptr loc_40105C<span class=\"token operator\">+</span><span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>首先是个异或指令，后面两个是同样一个寄存器，所以必定置0</p>\n<p>jz这个跳转指令是根据ZF标志位是否为1，而ZF是判断结果是否为0，为0则置1</p>\n<p>所以说这里一定会跳转，那么后面的正常指令则无法执行。</p>\n<p>所以可以把jz这条指令nop掉(操作方式为：Edit→patch program→Assemble…)。</p>\n<p>这里记得把下面的数据转换为汇编代码(按C)</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/9g4GOzSTjkbxsUe.png\" alt=\"image-20220403174301811\"></p>\n<h2 id=\"2-主函数分析：\"><a href=\"#2-主函数分析：\" class=\"headerlink\" title=\"2.主函数分析：\"></a>2.主函数分析：</h2><h3 id=\"1-确定整体思路：\"><a href=\"#1-确定整体思路：\" class=\"headerlink\" title=\"1.确定整体思路：\"></a>1.确定整体思路：</h3><p>花指令去除后就可以F5分析代码了,下面是未修饰的反汇编代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// kr00_4</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// kr04_4</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">int</span> v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span>\n  <span class=\"token keyword\">unsigned</span> __int8 v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// dl</span>\n  <span class=\"token keyword\">int</span> v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  <span class=\"token keyword\">int</span> v10<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span>\n  <span class=\"token keyword\">unsigned</span> __int8 v11<span class=\"token punctuation\">;</span> <span class=\"token comment\">// dl</span>\n  <span class=\"token keyword\">int</span> v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">char</span> v16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp-1Ch] [ebp-55Ch]</span>\n  <span class=\"token keyword\">char</span> v17<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+0h] [ebp-540h]</span>\n  <span class=\"token keyword\">char</span> v18<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+0h] [ebp-540h]</span>\n  __int128 v19<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+Ch] [ebp-534h]</span>\n  <span class=\"token keyword\">int</span> v20<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+2Ch] [ebp-514h]</span>\n  <span class=\"token keyword\">int</span> v21<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+30h] [ebp-510h]</span>\n  __int16 v22<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+34h] [ebp-50Ch]</span>\n  <span class=\"token keyword\">int</span> v23<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+38h] [ebp-508h]</span>\n  <span class=\"token keyword\">char</span> v24<span class=\"token punctuation\">[</span><span class=\"token number\">512</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+3Ch] [ebp-504h] BYREF</span>\n  <span class=\"token keyword\">char</span> v25<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+23Ch] [ebp-304h] BYREF</span>\n  <span class=\"token keyword\">char</span> v26<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+33Ch] [ebp-204h] BYREF</span>\n  <span class=\"token keyword\">char</span> v27<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+43Ch] [ebp-104h] BYREF</span>\n\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v27<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>v27<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>v26<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tallmewhy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>v26<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v19<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_4021B0<span class=\"token punctuation\">;</span>\n  v19<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_4021C0<span class=\"token punctuation\">;</span>\n  v20 <span class=\"token operator\">=</span> <span class=\"token number\">1424414361</span><span class=\"token punctuation\">;</span>\n  v21 <span class=\"token operator\">=</span> <span class=\"token number\">340807546</span><span class=\"token punctuation\">;</span>\n  v22 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">4891</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, this is my world.If you want flag, give me something I like.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_401010</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\n\"</span><span class=\"token punctuation\">,</span> v16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v24<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>v24<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">gets</span><span class=\"token punctuation\">(</span>v24<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v3 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>v24<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v4 <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>v26<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>v25<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>v25<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v27<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    v25<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v26<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> v4<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  v6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v7 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">do</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v8 <span class=\"token operator\">=</span> v27<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v7 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v7 <span class=\"token operator\">+</span> v25<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> v8<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n    v27<span class=\"token punctuation\">[</span>v6<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v27<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v27<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v8 <span class=\"token operator\">^</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v6 <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_401010</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\n\\\\n\"</span><span class=\"token punctuation\">,</span> v17<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v9 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v23 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v10 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n      v9 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v9 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n      v11 <span class=\"token operator\">=</span> v27<span class=\"token punctuation\">[</span>v9<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v10 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">+</span> v10<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n      v27<span class=\"token punctuation\">[</span>v9<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v27<span class=\"token punctuation\">[</span>v10<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v27<span class=\"token punctuation\">[</span>v10<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v11<span class=\"token punctuation\">;</span>\n      v12 <span class=\"token operator\">=</span> v23<span class=\"token punctuation\">;</span>\n      v24<span class=\"token punctuation\">[</span>v23<span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> v27<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">+</span> v27<span class=\"token punctuation\">[</span>v9<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v23 <span class=\"token operator\">=</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> v3 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v10 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> v3<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span>\n    v10 <span class=\"token operator\">=</span> v24<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v19 <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v14 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>unk_402184<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v10 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n    v14 <span class=\"token operator\">=</span> aGood<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_401010</span><span class=\"token punctuation\">(</span>v14<span class=\"token punctuation\">,</span> v18<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>先从下面开始看，81行有个if，判断v10是否为真，为真则输出good，否则输出的为80行所赋的值(跟过去可以看到“soory I don‘t like your stuff.”)，也就是我们的目的是让v10位真，而v10成真的条件为78行的for循环(这里也就是说是判断flag的地方)对于v24和v19的比较</p>\n<h3 id=\"2-密文提取：\"><a href=\"#2-密文提取：\" class=\"headerlink\" title=\"2.密文提取：\"></a>2.密文提取：</h3><p>v19为gets的值，查看v24中的赋值：</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/R4PLhkjQp8sZzaF.png\" alt=\"image-20220403174319696\"></p>\n<p>这大概就是要比较的值，而且注意汇编代码和反汇编代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">004010</span>A8                 movaps  xmm0<span class=\"token punctuation\">,</span> ds<span class=\"token operator\">:</span>xmmword_4021B0\n<span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">004010</span>AF                 movups  <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span>rflag<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> xmm0\n<span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">004010</span>B6                 push    offset Buffer   <span class=\"token punctuation\">;</span> <span class=\"token string\">\"Hello, this is my world.If you want fla\"</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">004010</span>BB                 movaps  xmm0<span class=\"token punctuation\">,</span> ds<span class=\"token operator\">:</span>xmmword_4021C0\n<span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">004010</span>C2                 movups  <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span>var_524<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> xmm0\n<span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">004010</span>C9                 mov     <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span>var_514<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54E6</span>D699h\n<span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">004010</span>D3                 mov     <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span>var_510<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14504F</span><span class=\"token number\">7</span>Ah\n<span class=\"token punctuation\">.</span>text<span class=\"token operator\">:</span><span class=\"token number\">004010</span>DD                 mov     <span class=\"token punctuation\">[</span>ebp<span class=\"token operator\">+</span>var_50C<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>ECE5h\n__int128 v19<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+Ch] [ebp-534h]</span>\n  <span class=\"token keyword\">int</span> v20<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+2Ch] [ebp-514h]</span>\n  <span class=\"token keyword\">int</span> v21<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+30h] [ebp-510h]</span>\n  __int16 v22<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+34h] [ebp-50Ch]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>31到35行的赋值其实是连续的，这里可能ida识别错了。</p>\n<p>提取v19的值:</p>\n<p>选中数据段的值，按<code>Shift+E</code> 弹出Export data对话框：</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/oFCjQdpExwZ4GLr.png\" alt=\"image-20220403174338054\"></p>\n<img src=\"https://s2.loli.net/2022/04/03/fTMSxCzLhbiDugU.png\" alt=\"image-20220403174351259\" style=\"zoom:67%;\" />\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">F58C8DE49FA5286530F4EBD324A9911A6FD46AD70B8DE8B8834A5A6EBECBF44B<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里注意的是rdata的值是小端存储的，在对话框已经自动转换了，但后面几个变量没有，得自己改：</p>\n<p>先把这些变量的值改成十六进制(按H)</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">v20 <span class=\"token operator\">=</span> <span class=\"token number\">0x54E6D699</span><span class=\"token punctuation\">;</span>\nv21 <span class=\"token operator\">=</span> <span class=\"token number\">0x14504F7A</span><span class=\"token punctuation\">;</span>\nv22 <span class=\"token operator\">=</span> <span class=\"token number\">0xECE5</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>最终数据为：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">F58C8DE49FA5286530F4EBD324A9911A6FD46AD70B8DE8B8834A5A6EBECBF44B99D6E6547A4F5014E5EC<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里为了方便之后编写exp这里写了个脚本将内容分段：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">rflag <span class=\"token operator\">=</span> <span class=\"token string\">\"F58C8DE49FA5286530F4EBD324A9911A6FD46AD70B8DE8B8834A5A6EBECBF44B99D6E6547A4F5014E5EC\"</span>\nflag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\nhaha <span class=\"token operator\">=</span> <span class=\"token string\">\"0x\"</span>\nhehe <span class=\"token operator\">=</span> <span class=\"token string\">\",\"</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>rflag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">>=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>rflag<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">break</span>\n    flag <span class=\"token operator\">+=</span> haha <span class=\"token operator\">+</span> rflag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> rflag<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span>hehe\nflag <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这一步纯属好玩，哈哈。接下来就是真实分析函数了：</p>\n<h3 id=\"3-算法分析\"><a href=\"#3-算法分析\" class=\"headerlink\" title=\"3.算法分析\"></a>3.算法分析</h3><ol>\n<li><p>首先看第一个循环：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  v27<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>                  \n  v25<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v26<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> v4<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>        \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里也就是RC4中的s盒初始化的部分了，v27为s盒，v25为t盒，v26位key</p>\n</li>\n<li><p>第二个循环：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">v6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nv7 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">do</span>\n<span class=\"token punctuation\">&#123;</span>\n  v8 <span class=\"token operator\">=</span> S_box<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  v7 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v7 <span class=\"token operator\">+</span> T_box<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> v8<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n  S_box<span class=\"token punctuation\">[</span>v6<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S_box<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  S_box<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v8 <span class=\"token operator\">^</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v6 <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里和正常的RC4加密不同，加了一个v8变量一般来说做完5、6行就是S_box[v6] 、S_box[v7]的值进行交换，但这里不同S_box[v6]的值是正常存S_box[v7]的值，不过S_box[v7]的值存放的是S_box[v6] ^0x37,正常的RC4是不会改动s盒的，但在这个算法中s盒的值被改动了。</p>\n</li>\n<li><p>最后一个循环按照RC4的加密算法来说这里做的就是对明文的加密了：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">v9 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nv23 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nv10 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v3 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">do</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v9 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v9 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n    v11 <span class=\"token operator\">=</span> S_box<span class=\"token punctuation\">[</span>v9<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v10 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">+</span> v10<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n    S_box<span class=\"token punctuation\">[</span>v9<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S_box<span class=\"token punctuation\">[</span>v10<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    S_box<span class=\"token punctuation\">[</span>v10<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v11<span class=\"token punctuation\">;</span>\n    v12 <span class=\"token operator\">=</span> v23<span class=\"token punctuation\">;</span>\n    flag<span class=\"token punctuation\">[</span>v23<span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> S_box<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">+</span> S_box<span class=\"token punctuation\">[</span>v9<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v23 <span class=\"token operator\">=</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> v3 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v10 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这个部分和正常的RC4倒是没有区别。</p>\n<ul>\n<li><p>修改变量后的函数</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> len_flag<span class=\"token punctuation\">;</span> <span class=\"token comment\">// kr00_4</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> len_key<span class=\"token punctuation\">;</span> <span class=\"token comment\">// kr04_4</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">int</span> i_1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  <span class=\"token keyword\">int</span> j_1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span>\n  <span class=\"token keyword\">unsigned</span> __int8 v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// dl</span>\n  <span class=\"token keyword\">int</span> i_2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// edi</span>\n  <span class=\"token keyword\">int</span> j_2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ebx</span>\n  <span class=\"token keyword\">unsigned</span> __int8 v11<span class=\"token punctuation\">;</span> <span class=\"token comment\">// dl</span>\n  <span class=\"token keyword\">int</span> v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ecx</span>\n  <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>v14<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span>\n  <span class=\"token keyword\">char</span> v16<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp-1Ch] [ebp-55Ch]</span>\n  <span class=\"token keyword\">char</span> v17<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+0h] [ebp-540h]</span>\n  <span class=\"token keyword\">char</span> v18<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+0h] [ebp-540h]</span>\n  __int128 rflag<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+Ch] [ebp-534h]</span>\n  <span class=\"token keyword\">int</span> v20<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+2Ch] [ebp-514h]</span>\n  <span class=\"token keyword\">int</span> v21<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+30h] [ebp-510h]</span>\n  __int16 v22<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+34h] [ebp-50Ch]</span>\n  <span class=\"token keyword\">int</span> v23<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+38h] [ebp-508h]</span>\n  <span class=\"token keyword\">char</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">512</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+3Ch] [ebp-504h] BYREF</span>\n  <span class=\"token keyword\">char</span> T_box<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+23Ch] [ebp-304h] BYREF</span>\n  <span class=\"token keyword\">char</span> key<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+33Ch] [ebp-204h] BYREF</span>\n  <span class=\"token keyword\">char</span> S_box<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [esp+43Ch] [ebp-104h] BYREF</span>\n\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>S_box<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>S_box<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tallmewhy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>key<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_4021B0<span class=\"token punctuation\">;</span>\n  rflag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xmmword_4021C0<span class=\"token punctuation\">;</span>\n  v20 <span class=\"token operator\">=</span> <span class=\"token number\">0x54E6D699</span><span class=\"token punctuation\">;</span>\n  v21 <span class=\"token operator\">=</span> <span class=\"token number\">0x14504F7A</span><span class=\"token punctuation\">;</span>\n  v22 <span class=\"token operator\">=</span> <span class=\"token number\">0xECE5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, this is my world.If you want flag, give me something I like.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_401010</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\n\"</span><span class=\"token punctuation\">,</span> v16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">gets</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  len_flag <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  len_key <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>T_box<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>T_box<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    S_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    T_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> len_key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  i_1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  j_1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">do</span>\n  <span class=\"token punctuation\">&#123;</span>\n    v8 <span class=\"token operator\">=</span> S_box<span class=\"token punctuation\">[</span>i_1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    j_1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j_1 <span class=\"token operator\">+</span> T_box<span class=\"token punctuation\">[</span>i_1<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> v8<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n    S_box<span class=\"token punctuation\">[</span>i_1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S_box<span class=\"token punctuation\">[</span>j_1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    S_box<span class=\"token punctuation\">[</span>j_1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v8 <span class=\"token operator\">^</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> i_1 <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_401010</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\n\\\\n\"</span><span class=\"token punctuation\">,</span> v17<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  i_2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  v23 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  j_2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> len_flag <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">do</span>\n    <span class=\"token punctuation\">&#123;</span>\n      i_2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i_2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n      v11 <span class=\"token operator\">=</span> S_box<span class=\"token punctuation\">[</span>i_2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      j_2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">+</span> j_2<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n      S_box<span class=\"token punctuation\">[</span>i_2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S_box<span class=\"token punctuation\">[</span>j_2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      S_box<span class=\"token punctuation\">[</span>j_2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v11<span class=\"token punctuation\">;</span>\n      v12 <span class=\"token operator\">=</span> v23<span class=\"token punctuation\">;</span>\n      flag<span class=\"token punctuation\">[</span>v23<span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> S_box<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v11 <span class=\"token operator\">+</span> S_box<span class=\"token punctuation\">[</span>i_2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      v23 <span class=\"token operator\">=</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v12 <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> len_flag <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    j_2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> len_flag<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span>\n    j_2 <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>rflag <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v14 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>sorry<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> j_2 <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n    v14 <span class=\"token operator\">=</span> aGood<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">sub_401010</span><span class=\"token punctuation\">(</span>v14<span class=\"token punctuation\">,</span> v18<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n</ol>\n<h1 id=\"3-exp编写：\"><a href=\"#3-exp编写：\" class=\"headerlink\" title=\"3.exp编写：\"></a>3.exp编写：</h1><h2 id=\"1-思路分析：\"><a href=\"#1-思路分析：\" class=\"headerlink\" title=\"1.思路分析：\"></a>1.思路分析：</h2><p>分析函数可以发现其实这个程序和RC4加密是一样的，只是在乱序时对s盒做了更改，那么编写exp时只需要注意这一个点就行，其他和普通RC4的解体方式是一样的。</p>\n<h2 id=\"2-exp：\"><a href=\"#2-exp：\" class=\"headerlink\" title=\"2.exp：\"></a>2.exp：</h2><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">v8 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xF5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span>\n  \t\t<span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span>\n  \t\t<span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span>\n  \t\t<span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span>\n  \t\t<span class=\"token number\">0xE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">]</span>\ns <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    s<span class=\"token operator\">+=</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加密后的明文为：%s\"</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">)</span>\nkey<span class=\"token operator\">=</span> <span class=\"token string\">\"tallmewhy\"</span>\ns_box <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">256</span>\nt_box <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">256</span>\nflag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\ns_box <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    #S盒的初始化\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    t_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"原来的 s 盒：%s\"</span> <span class=\"token operator\">%</span> s_box<span class=\"token punctuation\">)</span>\n\nv3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    tmp <span class=\"token operator\">=</span> s_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    v3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">+</span> v3 <span class=\"token operator\">+</span> t_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n    # 然后交换两个数\n    s_box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s_box<span class=\"token punctuation\">[</span>v3<span class=\"token punctuation\">]</span>\n    s_box<span class=\"token punctuation\">[</span>v3<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp <span class=\"token operator\">^</span> <span class=\"token number\">0x37</span>    #对S盒进行乱序\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"乱序后的 s 盒：%s\"</span> <span class=\"token operator\">%</span> s_box<span class=\"token punctuation\">)</span>\n\nv5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nv6 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nv7 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>v7 <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    v5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v5 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n    v6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v6 <span class=\"token operator\">+</span> s_box<span class=\"token punctuation\">[</span>v5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span>\n    s_box<span class=\"token punctuation\">[</span>v5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>s_box<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s_box<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>s_box<span class=\"token punctuation\">[</span>v5<span class=\"token punctuation\">]</span>    # 交换\n    flag <span class=\"token operator\">+=</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span>v8<span class=\"token punctuation\">[</span>v7<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> s_box<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>s_box<span class=\"token punctuation\">[</span>v5<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> s_box<span class=\"token punctuation\">[</span>v6<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    v7 <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"解密后的密文为：%s\"</span> <span class=\"token operator\">%</span>flag<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>flag{c5e0f5f6-f79e-5b9b-988f-28f046117802}</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/pB8aq3QleKWwohn.png\" alt=\"image-20220403174413178\"></p>\n","feature":false,"text":"2021绿城杯eazy re这是一个稍微魔改了一下的RC4. 1.基本信息探查：1.EXEinfo：无壳，32位 2.运行一下：看到字符串“Hello, this is my world.If you want flag, give me something I like.” 然...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":11,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":12,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2021%E7%BB%BF%E5%9F%8E%E6%9D%AFeazy-re\"><span class=\"toc-text\">2021绿城杯eazy re</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E6%8E%A2%E6%9F%A5%EF%BC%9A\"><span class=\"toc-text\">1.基本信息探查：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-EXEinfo%EF%BC%9A\"><span class=\"toc-text\">1.EXEinfo：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">2.运行一下：</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-IDA%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">2.IDA分析：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%8E%BB%E8%8A%B1%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">1.去花指令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E4%B8%BB%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">2.主函数分析：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%A1%AE%E5%AE%9A%E6%95%B4%E4%BD%93%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span class=\"toc-text\">1.确定整体思路：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AF%86%E6%96%87%E6%8F%90%E5%8F%96%EF%BC%9A\"><span class=\"toc-text\">2.密文提取：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\">3.算法分析</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-exp%E7%BC%96%E5%86%99%EF%BC%9A\"><span class=\"toc-text\">3.exp编写：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%80%9D%E8%B7%AF%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">1.思路分析：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-exp%EF%BC%9A\"><span class=\"toc-text\">2.exp：</span></a></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/home.php?mod=space&uid=1677194&do=thread&view=me&from=space"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"mapped":true,"prev_post":{"title":"TEA系列算法分析及逆向特征","uid":"65fe6821503e94cfcf38bb466bd2aa3e","slug":"Crypto/TEA系列算法分析及逆向特征","date":"2022-03-19T17:20:53.000Z","updated":"2022-04-03T09:23:54.782Z","comments":true,"path":"api/articles/Crypto/TEA系列算法分析及逆向特征.json","keywords":null,"cover":"https://s2.loli.net/2022/04/03/shw79pqOHjLFSrI.jpg","text":"1.TEA:1.TEA简介：“TEA” 的全称为”Tiny Encryption Algorithm”，是一种微型加密算法。TEA算法使用64位的明文分组和128位的密钥，使用feistel分组加框架，需要进行32轮循环得到最后的64位密文，其中magic number DELT...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"Crypto","slug":"Crypto","count":4,"path":"api/categories/Crypto.json"}],"tags":[{"name":"reverse常见算法","slug":"reverse常见算法","count":3,"path":"api/tags/reverse常见算法.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/home.php?mod=space&uid=1677194&do=thread&view=me&from=space"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false},"next_post":{"title":"RC4逆向题实例1","uid":"e046ec4a095c5d314105a6a20189055a","slug":"Reverse/RC4逆向题实例1","date":"2022-03-15T11:46:07.000Z","updated":"2022-04-03T10:08:25.809Z","comments":true,"path":"api/articles/Reverse/RC4逆向题实例1.json","keywords":null,"cover":"https://s2.loli.net/2022/04/03/tEn5MeVdLpzSwIB.jpg","text":"从0到1例题：BabyAlgorithm1.基本信息探查：ELF文件，64位，无壳 2.IDA分析：跟踪到主函数： __int64 __fastcall main(int a1, char **a2, char **a3) &#123; __int64 result; // ra...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":11,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":12,"path":"api/tags/WP.json"},{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/home.php?mod=space&uid=1677194&do=thread&view=me&from=space"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false}}