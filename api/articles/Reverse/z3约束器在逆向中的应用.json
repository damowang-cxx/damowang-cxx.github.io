{"title":"z3约束器在逆向中的应用","uid":"e2d2041f6fdd1685a23cfbc4b3d5e45d","slug":"Reverse/z3约束器在逆向中的应用","date":"2022-03-21T14:22:32.000Z","updated":"2022-04-03T08:44:37.858Z","comments":true,"path":"api/articles/Reverse/z3约束器在逆向中的应用.json","keywords":null,"cover":"https://s2.loli.net/2022/04/03/l9MRbS6OqV785Fa.jpg","content":"<h1 id=\"ISCC-2018-My-math-is-bad\"><a href=\"#ISCC-2018-My-math-is-bad\" class=\"headerlink\" title=\"ISCC 2018 My math is bad\"></a>ISCC 2018 My math is bad</h1><p>考点：rand，z3</p>\n<h2 id=\"1-基本信息探查：\"><a href=\"#1-基本信息探查：\" class=\"headerlink\" title=\"1.基本信息探查：\"></a>1.基本信息探查：</h2><h3 id=\"1-EXEinfo：\"><a href=\"#1-EXEinfo：\" class=\"headerlink\" title=\"1.EXEinfo：\"></a>1.EXEinfo：</h3><p>64位，无壳，ELF文件</p>\n<h3 id=\"2-运行一下：\"><a href=\"#2-运行一下：\" class=\"headerlink\" title=\"2.运行一下：\"></a>2.运行一下：</h3><p><img src=\"https://s2.loli.net/2022/04/03/lIoBrLx8UTZb3CW.png\" alt=\"image-20220403164306414\"></p>\n<h2 id=\"2-ida分析：\"><a href=\"#2-ida分析：\" class=\"headerlink\" title=\"2.ida分析：\"></a>2.ida分析：</h2><h3 id=\"查看主函数：\"><a href=\"#查看主函数：\" class=\"headerlink\" title=\"查看主函数：\"></a>查看主函数：</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>a3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=======================================\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= Welcome to the flag access machine! =\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=   Input the password to login ...   =\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=======================================\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">sub_400766</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Congratulations! You should get the flag...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">sub_400B16</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wrong password!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>主函数的逻辑很清晰，scanf接受值，然后if里调用一个函数，根据返回值判断输入Congratulations!或者Wrong。可以看到如果判断成功还会调用一个函数，函数里面是异或并且输出flag。</p>\n<h3 id=\"子函数分析：\"><a href=\"#子函数分析：\" class=\"headerlink\" title=\"子函数分析：\"></a>子函数分析：</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__int64 __fastcall <span class=\"token function\">sub_400766</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  __int64 result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// rax</span>\n  __int64 v2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+20h] [rbp-60h]</span>\n  __int64 v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+28h] [rbp-58h]</span>\n  __int64 v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+30h] [rbp-50h]</span>\n  __int64 v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+38h] [rbp-48h]</span>\n  __int64 v6<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+40h] [rbp-40h]</span>\n  __int64 v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+48h] [rbp-38h]</span>\n  __int64 v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+50h] [rbp-30h]</span>\n  __int64 v9<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+58h] [rbp-28h]</span>\n  __int64 v10<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+60h] [rbp-20h]</span>\n  __int64 v11<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+68h] [rbp-18h]</span>\n  __int64 v12<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+70h] [rbp-10h]</span>\n  __int64 v13<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+78h] [rbp-8h]</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n  v2 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n  v3 <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n  v4 <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n  v5 <span class=\"token operator\">=</span> d<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> x <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">-</span> y <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>z <span class=\"token operator\">!=</span> <span class=\"token number\">2652042832920173142LL</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_12<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">3LL</span> <span class=\"token operator\">*</span> z <span class=\"token operator\">+</span> <span class=\"token number\">4LL</span> <span class=\"token operator\">*</span> y <span class=\"token operator\">-</span> x <span class=\"token operator\">-</span> <span class=\"token number\">2LL</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">!=</span> <span class=\"token number\">397958918</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_12<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>y <span class=\"token operator\">-</span> z <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>x <span class=\"token operator\">!=</span> <span class=\"token number\">3345692380376715070LL</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_12<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">27LL</span> <span class=\"token operator\">*</span> x <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">-</span> <span class=\"token number\">11LL</span> <span class=\"token operator\">*</span> y <span class=\"token operator\">-</span> z <span class=\"token operator\">!=</span> <span class=\"token number\">40179413815LL</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_12<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">^</span> x <span class=\"token operator\">^</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v6 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  v7 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  v8 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  v9 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  v10 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  v11 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  v12 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  v13 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">*</span> v7 <span class=\"token operator\">+</span> v2 <span class=\"token operator\">*</span> v6 <span class=\"token operator\">-</span> v3 <span class=\"token operator\">-</span> v4 <span class=\"token operator\">!=</span> <span class=\"token number\">0xE638C96D3LL</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">goto</span> LABEL_12<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">+</span> v2 <span class=\"token operator\">+</span> v4 <span class=\"token operator\">*</span> v9 <span class=\"token operator\">-</span> v3 <span class=\"token operator\">*</span> v8 <span class=\"token operator\">==</span> <span class=\"token number\">0xB59F2D0CBLL</span>\n    <span class=\"token operator\">&amp;&amp;</span> v2 <span class=\"token operator\">*</span> v10 <span class=\"token operator\">+</span> v3 <span class=\"token operator\">*</span> v11 <span class=\"token operator\">-</span> v4 <span class=\"token operator\">-</span> v5 <span class=\"token operator\">==</span> <span class=\"token number\">0xDCFE88C6DLL</span>\n    <span class=\"token operator\">&amp;&amp;</span> v4 <span class=\"token operator\">*</span> v13 <span class=\"token operator\">+</span> v2 <span class=\"token operator\">-</span> v3 <span class=\"token operator\">-</span> v5 <span class=\"token operator\">*</span> v12 <span class=\"token operator\">==</span> <span class=\"token number\">0xC076D98BBLL</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    result <span class=\"token operator\">=</span> <span class=\"token number\">1LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">else</span>\n  <span class=\"token punctuation\">&#123;</span>\nLABEL_12<span class=\"token operator\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>函数显示判断输入字符串的长度是否为32,然后与另外三个值进行一些算数运算后看是否等于四个不同的常数，看到这的时候有个疑问，这个判断只用到了输入字符串的前32位，后面的没有用到，这里跟踪到数据段就可以解开异或</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/bISJc5Ar7d36hvo.png\" alt=\"image-20220403164347247\"></p>\n<p>s确实只用到了四个字节但这个地址是连续的，而之前判断过输入字串的串长为32位也就是说要想知道输入还需要得到x,z,y,a,b,c,d。(注意排列顺序不是xyz)</p>\n<p>1.求解x，z，y：</p>\n<p>四个if判断后紧接着就是设置随机数的种子，这里用到了也是之前if判断的三个值和输入的字符串，srand函数是个关键，它决定了后面一大串随机数值的生成，这里需要得出随机数的种子值：(简化一下这四个if判断)</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">x <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">-</span> y <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>z <span class=\"token operator\">!=</span> 0x24CDF2E7C953DA56LL\n3LL <span class=\"token operator\">*</span> z <span class=\"token operator\">+</span> 4LL <span class=\"token operator\">*</span> y <span class=\"token operator\">-</span> x <span class=\"token operator\">-</span> 2LL <span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">!=</span> <span class=\"token number\">0x17B85F06</span>\n<span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>y <span class=\"token operator\">-</span> z <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>__int64<span class=\"token punctuation\">)</span>x <span class=\"token operator\">!=</span> 0x2E6E497E6415CF3ELL\n27LL <span class=\"token operator\">*</span> x <span class=\"token operator\">+</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">-</span> 11LL <span class=\"token operator\">*</span> y <span class=\"token operator\">-</span> z <span class=\"token operator\">!=</span> 0x95AE13337LL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这一看就得构造一个四元一次方程，使用z3模块编写脚本：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\nx <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#x</span>\ny <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#y</span>\nz <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'z'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#z</span>\nf <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#s</span>\ns <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> f <span class=\"token operator\">-</span> y <span class=\"token operator\">*</span> z <span class=\"token operator\">==</span> <span class=\"token number\">2652042832920173142</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> z <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> y <span class=\"token operator\">-</span> x <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> f <span class=\"token operator\">==</span> <span class=\"token number\">397958918</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> f <span class=\"token operator\">*</span> y <span class=\"token operator\">-</span> z <span class=\"token operator\">*</span> x <span class=\"token operator\">==</span> <span class=\"token number\">3345692380376715070</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">27</span> <span class=\"token operator\">*</span> x <span class=\"token operator\">+</span> f <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> y <span class=\"token operator\">-</span> z <span class=\"token operator\">==</span> <span class=\"token number\">40179413815</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'no result'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输出结果为：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span>x <span class=\"token operator\">=</span> <span class=\"token number\">1801073242</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">862734414</span><span class=\"token punctuation\">,</span> z <span class=\"token operator\">=</span> <span class=\"token number\">829124174</span><span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> <span class=\"token number\">1869639009</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后计算srand的值：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">1801073242</span>\ny <span class=\"token operator\">=</span> <span class=\"token number\">862734414</span>\nz <span class=\"token operator\">=</span> <span class=\"token number\">829124174</span>\nf <span class=\"token operator\">=</span> <span class=\"token number\">1869639009</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">^</span> y <span class=\"token operator\">^</span> z <span class=\"token operator\">^</span> f<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#103643451</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>2.求解a，b，c，d：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token function\">srand</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">^</span> x <span class=\"token operator\">^</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>s <span class=\"token operator\">^</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n v6 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n v7 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n v8 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n v9 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n v10 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n v11 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n v12 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n v13 <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">*</span> v7 <span class=\"token operator\">+</span> v2 <span class=\"token operator\">*</span> v6 <span class=\"token operator\">-</span> v3 <span class=\"token operator\">-</span> v4 <span class=\"token operator\">!=</span> <span class=\"token number\">0xE638C96D3LL</span> <span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">goto</span> LABEL_12<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v5 <span class=\"token operator\">+</span> v2 <span class=\"token operator\">+</span> v4 <span class=\"token operator\">*</span> v9 <span class=\"token operator\">-</span> v3 <span class=\"token operator\">*</span> v8 <span class=\"token operator\">==</span> <span class=\"token number\">0xB59F2D0CBLL</span>\n   <span class=\"token operator\">&amp;&amp;</span> v2 <span class=\"token operator\">*</span> v10 <span class=\"token operator\">+</span> v3 <span class=\"token operator\">*</span> v11 <span class=\"token operator\">-</span> v4 <span class=\"token operator\">-</span> v5 <span class=\"token operator\">==</span> <span class=\"token number\">0xDCFE88C6DLL</span>\n   <span class=\"token operator\">&amp;&amp;</span> v4 <span class=\"token operator\">*</span> v13 <span class=\"token operator\">+</span> v2 <span class=\"token operator\">-</span> v3 <span class=\"token operator\">-</span> v5 <span class=\"token operator\">*</span> v12 <span class=\"token operator\">==</span> <span class=\"token number\">0xC076D98BBLL</span> <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上一步我们已经拿到了随机数的种子，那么现在对于我们来说未知数就只有v2，v3，v4，v5了，下面先将v6到v13get。</p>\n<p>转到linux系统生成rand函数(在随机数那篇笔记有提到为啥不用Windows):</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"stdio.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"stdlib.h\"</span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">103643451</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v6=%d\\\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"V7=%d\\\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v8=%d\\\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v9=%d\\\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v10=%d\\\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v11=%d\\\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v12=%d\\\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v13=%d\\\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>程序运行结果为：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">q@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>Desktop$ gcc <span class=\"token operator\">-</span>o test_rand test_rand<span class=\"token punctuation\">.</span>c \nq@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>Desktop$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>test_rand \nv6<span class=\"token operator\">=</span><span class=\"token number\">22</span>\nV7<span class=\"token operator\">=</span><span class=\"token number\">39</span>\nv8<span class=\"token operator\">=</span><span class=\"token number\">45</span>\nv9<span class=\"token operator\">=</span><span class=\"token number\">45</span>\nv10<span class=\"token operator\">=</span><span class=\"token number\">35</span>\nv11<span class=\"token operator\">=</span><span class=\"token number\">41</span>\nv12<span class=\"token operator\">=</span><span class=\"token number\">13</span>\nv13<span class=\"token operator\">=</span><span class=\"token number\">36</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>现在就可以列方程求解四元一次方程了：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\na <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#v2</span>\nb <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#v3</span>\nc <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#v4</span>\nd <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#v5</span>\ns <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>d <span class=\"token operator\">*</span> <span class=\"token number\">39</span> <span class=\"token operator\">+</span> a <span class=\"token operator\">*</span> <span class=\"token number\">22</span> <span class=\"token operator\">-</span> b <span class=\"token operator\">-</span> c <span class=\"token operator\">==</span> <span class=\"token number\">61799700179</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> a <span class=\"token operator\">+</span> c <span class=\"token operator\">*</span> <span class=\"token number\">45</span> <span class=\"token operator\">-</span> b <span class=\"token operator\">*</span> <span class=\"token number\">45</span> <span class=\"token operator\">==</span> <span class=\"token number\">48753725643</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> <span class=\"token number\">35</span> <span class=\"token operator\">+</span> b <span class=\"token operator\">*</span> <span class=\"token number\">41</span> <span class=\"token operator\">-</span> c <span class=\"token operator\">-</span> d <span class=\"token operator\">==</span> <span class=\"token number\">59322698861</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span> <span class=\"token number\">36</span> <span class=\"token operator\">+</span> a <span class=\"token operator\">-</span> b <span class=\"token operator\">-</span> d <span class=\"token operator\">*</span> <span class=\"token number\">13</span> <span class=\"token operator\">==</span> <span class=\"token number\">51664230587</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'no result'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>运行结果为：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">811816014</span><span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> <span class=\"token number\">828593230</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1867395930</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> <span class=\"token number\">1195788129</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>至此输入的字串的值就全到手了，将它排列好：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token number\">1869639009</span><span class=\"token punctuation\">,</span><span class=\"token number\">1801073242</span><span class=\"token punctuation\">,</span><span class=\"token number\">829124174</span><span class=\"token punctuation\">,</span><span class=\"token number\">862734414</span><span class=\"token punctuation\">,</span><span class=\"token number\">811816014</span><span class=\"token punctuation\">,</span><span class=\"token number\">828593230</span><span class=\"token punctuation\">,</span><span class=\"token number\">1867395930</span><span class=\"token punctuation\">,</span><span class=\"token number\">1195788129</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>使用python的<code>libnum</code> 库将数字串转换成字符串：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#/usr/bin/env python</span>\n<span class=\"token comment\"># coding=utf-8</span>\n<span class=\"token keyword\">import</span> libnum\n\nflag <span class=\"token operator\">=</span> <span class=\"token string\">b\"\"</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1869639009</span><span class=\"token punctuation\">,</span><span class=\"token number\">1801073242</span><span class=\"token punctuation\">,</span><span class=\"token number\">829124174</span><span class=\"token punctuation\">,</span><span class=\"token number\">862734414</span><span class=\"token punctuation\">,</span><span class=\"token number\">811816014</span><span class=\"token punctuation\">,</span><span class=\"token number\">828593230</span><span class=\"token punctuation\">,</span><span class=\"token number\">1867395930</span><span class=\"token punctuation\">,</span><span class=\"token number\">1195788129</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">:</span>\n    flag<span class=\"token operator\">+=</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#ampoZ2ZkNnk1NHl3NTc0NTc1Z3NoaGFG</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>输入密码可直接获取flag，另外一个函数就是rand函数与已知值进行异或获得flag，随机数种子就是输入的密码，这里就不进行分析了：</p>\n<p><img src=\"https://s2.loli.net/2022/04/03/FgkuLMKVbqH5fZX.png\" alt=\"image-20220403164417856\"></p>\n<p>flag{th3_Line@r_4lgebra_1s_d1fficult!}</p>\n","feature":false,"text":"ISCC 2018 My math is bad考点：rand，z3 1.基本信息探查：1.EXEinfo：64位，无壳，ELF文件 2.运行一下： 2.ida分析：查看主函数：__int64 __fastcall main(int a1, char **a2, char **a...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":11,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":12,"path":"api/tags/WP.json"},{"name":"python库","slug":"python库","count":2,"path":"api/tags/python库.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ISCC-2018-My-math-is-bad\"><span class=\"toc-text\">ISCC 2018 My math is bad</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E6%8E%A2%E6%9F%A5%EF%BC%9A\"><span class=\"toc-text\">1.基本信息探查：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-EXEinfo%EF%BC%9A\"><span class=\"toc-text\">1.EXEinfo：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">2.运行一下：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-ida%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">2.ida分析：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E4%B8%BB%E5%87%BD%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">查看主函数：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%90%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">子函数分析：</span></a></li></ol></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"mapped":true,"prev_post":{"title":"伪随机数的逆向中的应用","uid":"b987f7dbe9c05bec0f7dc95b74539bc9","slug":"Reverse/伪随机数的逆向中的应用","date":"2022-03-21T14:33:28.000Z","updated":"2022-04-03T08:38:46.514Z","comments":true,"path":"api/articles/Reverse/伪随机数的逆向中的应用.json","keywords":null,"cover":"https://s2.loli.net/2022/04/03/GinpA4zbF9Py5gW.jpg","text":"1.伪随机数介绍：1.伪随机数的运行机制：假设有a1=f(seed) ，an+1=f(an)，那么就可以得到一个序列a1，a2，a3...an 制作一个伪随机数也就是让其每次返回序列的下一个元素，如图： 对于java.utiol.Random，比较老的C语言的rand()库，和一...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":11,"path":"api/categories/Reverse.json"}],"tags":[{"name":"C","slug":"C","count":1,"path":"api/tags/C.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false},"next_post":{"title":"z3约束器的使用","uid":"e0074d9f1f3fd35e88318f2b9f6e1fe1","slug":"Python/z3约束器的使用","date":"2022-03-21T14:11:13.000Z","updated":"2022-04-03T08:47:35.444Z","comments":true,"path":"api/articles/Python/z3约束器的使用.json","keywords":null,"cover":"https://s2.loli.net/2022/04/03/5sBd3WRMjYP8KcQ.jpg","text":"Z3约束器1.Z3约束器简介：1.Z3约束器是干啥的？z3是由微软公司开发的一个优秀的SMT求解器，它能够检查逻辑表达式的可满足性，通俗的来讲我们可以简单理解为它是一个解方程的计算器 使用文档 官方使用文档：&lt;https://rise4fun.com/z3/tutorial...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"python库","slug":"python库","count":2,"path":"api/tags/python库.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://s2.loli.net/2022/03/30/RYFbiSZI3exXNwd.jpg","link":"/","description":"整个博客督促自己学习<br>CrackMe笔记放在吾爱上<br>BUUOJ的做题笔记在看雪上","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"52pojie":{"icon":"/svg/noa.svg","link":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1609332&page=1#pid42026727"},"kanxue":{"icon":"/svg/images.svg","link":"https://bbs.pediy.com/user-920613-1.htm"}}}},"feature":false}}