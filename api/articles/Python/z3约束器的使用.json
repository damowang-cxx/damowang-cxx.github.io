{"title":"z3约束器的使用","uid":"e0074d9f1f3fd35e88318f2b9f6e1fe1","slug":"Python/z3约束器的使用","date":"2022-03-21T14:11:13.000Z","updated":"2022-03-21T14:51:52.452Z","comments":true,"path":"api/articles/Python/z3约束器的使用.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/wallhaven-9mx.jpg","content":"<h1 id=\"Z3约束器\"><a href=\"#Z3约束器\" class=\"headerlink\" title=\"Z3约束器\"></a>Z3约束器</h1><h2 id=\"1-Z3约束器简介：\"><a href=\"#1-Z3约束器简介：\" class=\"headerlink\" title=\"1.Z3约束器简介：\"></a>1.Z3约束器简介：</h2><h3 id=\"1-Z3约束器是干啥的？\"><a href=\"#1-Z3约束器是干啥的？\" class=\"headerlink\" title=\"1.Z3约束器是干啥的？\"></a>1.Z3约束器是干啥的？</h3><p>z3是由微软公司开发的一个优秀的<a href=\"https://www.cnblogs.com/steven-yang/p/7104068.html\">SMT</a>求解器，它能够检查逻辑表达式的可满足性，通俗的来讲我们可以简单理解为它是一个解方程的计算器</p>\n<ul>\n<li><p>使用文档</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">官方使用文档：<span class=\"token operator\">&lt;</span>https<span class=\"token operator\">:</span><span class=\"token comment\">//rise4fun.com/z3/tutorialcontent/guide></span>\nZ3 API in PYTHON 中文文档：<span class=\"token operator\">&lt;</span>https<span class=\"token operator\">:</span><span class=\"token comment\">//arabelatso.github.io/2018/06/14/Z3%20API%20in%20Python/></span>\nz3py 功能手册：<span class=\"token operator\">&lt;</span>https<span class=\"token operator\">:</span><span class=\"token comment\">//z3prover.github.io/api/html/namespacez3py.html></span>\nz3py 使用文档：<span class=\"token operator\">&lt;</span>https<span class=\"token operator\">:</span><span class=\"token comment\">//ericpony.github.io/z3py-tutorial/guide-examples.htm></span>\nz3 所使用的语法标准：<span class=\"token operator\">&lt;</span>http<span class=\"token operator\">:</span><span class=\"token comment\">//smtlib.cs.uiowa.edu/papers/smt-lib-reference-v2.6-r2017-07-18.pdf></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"2-安装：\"><a href=\"#2-安装：\" class=\"headerlink\" title=\"2.安装：\"></a>2.安装：</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">pip install z3<span class=\"token operator\">-</span>solver<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"2-使用教程：\"><a href=\"#2-使用教程：\" class=\"headerlink\" title=\"2.使用教程：\"></a>2.使用教程：</h2><h3 id=\"1-声明未知数：\"><a href=\"#1-声明未知数：\" class=\"headerlink\" title=\"1.声明未知数：\"></a>1.声明未知数：</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">常见类型：\nInt     <span class=\"token comment\">#整型</span>\nReal    <span class=\"token comment\">#实数</span>\nBool    <span class=\"token comment\">#布尔型</span>\nArray   <span class=\"token comment\">#数组</span>\nBitVec<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#char型</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中BitVec可以是特定大小的数据类型，不一定是8，例如C语言中的int型可以用BitVec(‘a’,32)表示</p>\n<p>For Example：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">声明整数<span class=\"token punctuation\">:</span>\nx <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span>\n批量声明实数：\na<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> Reals<span class=\"token punctuation\">(</span><span class=\"token string\">'a b c'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#声明3个实数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-常用API：\"><a href=\"#2-常用API：\" class=\"headerlink\" title=\"2.常用API：\"></a>2.常用API：</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>改命令会创建一个通用求解器，创建后我们可以添加我们的约束条件，进行下一步的求解\n\nadd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>用来添加约束条件，通常在solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>命令之后，添加的约束条件通常是一个逻辑等式\n\ncheck<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>该函数通常用来判断在添加完约束条件后，来检测解的情况，有解的时候会回显sat，无解的时候会回显unsat\n\nmodel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>在存在解的时候，该函数会将每个限制条件所对应的解集的交集，进而得出正解。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-For-Example：\"><a href=\"#3-For-Example：\" class=\"headerlink\" title=\"3.For Example：\"></a>3.For Example：</h3><p>对于求解一个方程来说一般可以分为四步：设未知数、列方程、求解方程、得到正解</p>\n<p>假设有方程组：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">30x<span class=\"token operator\">+</span>15y<span class=\"token operator\">=</span><span class=\"token number\">675</span>\n12x<span class=\"token operator\">+</span>5y<span class=\"token operator\">=</span><span class=\"token number\">265</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果用Z3来解的话：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\nx <span class=\"token operator\">=</span> Real<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> Real<span class=\"token punctuation\">(</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span><span class=\"token number\">15</span><span class=\"token operator\">*</span>y<span class=\"token operator\">==</span><span class=\"token number\">675</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>y<span class=\"token operator\">==</span><span class=\"token number\">265</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'no result'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-z3解决数学问题：\"><a href=\"#3-z3解决数学问题：\" class=\"headerlink\" title=\"3.z3解决数学问题：\"></a>3.z3解决数学问题：</h2><p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220321221958582.png\" alt=\"image-20220321221958582\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">func1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> Real<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">#x为小李</span>\n    y <span class=\"token operator\">=</span> Real<span class=\"token punctuation\">(</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">#y为小王的哥哥</span>\n    a <span class=\"token operator\">=</span> Real<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">#a为小李的弟弟</span>\n    b <span class=\"token operator\">=</span> Real<span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">#b为小王</span>\n\n    s <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> a <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> b <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> x <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">==</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>sat<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n       <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"no result\"</span><span class=\"token punctuation\">)</span>\n\nfunc1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://gitee.com/gitgit1/cloudimage/raw/master/img/image-20220321222028488.png\" alt=\"image-20220321222028488\"></p>\n<p>未完。</p>\n","feature":false,"text":"Z3约束器1.Z3约束器简介：1.Z3约束器是干啥的？z3是由微软公司开发的一个优秀的SMT求解器，它能够检查逻辑表达式的可满足性，通俗的来讲我们可以简单理解为它是一个解方程的计算器 使用文档 官方使用文档：&lt;https://rise4fun.com/z3/tutorial...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"python库","slug":"python库","count":2,"path":"api/tags/python库.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Z3%E7%BA%A6%E6%9D%9F%E5%99%A8\"><span class=\"toc-text\">Z3约束器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-Z3%E7%BA%A6%E6%9D%9F%E5%99%A8%E7%AE%80%E4%BB%8B%EF%BC%9A\"><span class=\"toc-text\">1.Z3约束器简介：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Z3%E7%BA%A6%E6%9D%9F%E5%99%A8%E6%98%AF%E5%B9%B2%E5%95%A5%E7%9A%84%EF%BC%9F\"><span class=\"toc-text\">1.Z3约束器是干啥的？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85%EF%BC%9A\"><span class=\"toc-text\">2.安装：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">2.使用教程：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%A3%B0%E6%98%8E%E6%9C%AA%E7%9F%A5%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">1.声明未知数：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%B8%B8%E7%94%A8API%EF%BC%9A\"><span class=\"toc-text\">2.常用API：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-For-Example%EF%BC%9A\"><span class=\"toc-text\">3.For Example：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-z3%E8%A7%A3%E5%86%B3%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98%EF%BC%9A\"><span class=\"toc-text\">3.z3解决数学问题：</span></a></li></ol></li></ol>","author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"z3约束器在逆向中的应用","uid":"e2d2041f6fdd1685a23cfbc4b3d5e45d","slug":"Reverse/z3约束器在逆向中的应用","date":"2022-03-21T14:22:32.000Z","updated":"2022-03-21T14:49:32.670Z","comments":true,"path":"api/articles/Reverse/z3约束器在逆向中的应用.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/1145542.jpg","text":"ISCC 2018 My math is bad考点：rand，z3 1.基本信息探查：1.EXEinfo：64位，无壳，ELF文件 2.运行一下： 2.ida分析：查看主函数：__int64 __fastcall main(int a1, char **a2, char **a...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":10,"path":"api/categories/Reverse.json"}],"tags":[{"name":"WP","slug":"WP","count":11,"path":"api/tags/WP.json"},{"name":"python库","slug":"python库","count":2,"path":"api/tags/python库.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"XXTEA逆向题实例","uid":"a8384dcd7abc1e2fe2e53196d43f1b58","slug":"Reverse/XXTEA逆向题实例","date":"2022-03-19T18:00:29.000Z","updated":"2022-03-19T18:06:26.671Z","comments":true,"path":"api/articles/Reverse/XXTEA逆向题实例.json","keywords":null,"cover":"https://gitee.com/gitgit1/cloudimage/raw/master/img/wallhaven-483vq1.jpg","text":"Apacha2021HGAME的re 1.基本信息探查：1.EXEinfo：无壳，64位，ELF文件格式 2.运行一下：输出了一个茶杯，这因该是官方给的一个提示，这个题可能用的是TEA加密 然后就是输出了一个字符串：“Please input:” 2.IDA分析：1.分析main...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"Reverse","slug":"Reverse","count":10,"path":"api/categories/Reverse.json"}],"tags":[{"name":"算法实例分析","slug":"算法实例分析","count":7,"path":"api/tags/算法实例分析.json"},{"name":"WP","slug":"WP","count":11,"path":"api/tags/WP.json"}],"author":{"name":"Big Devils","slug":"blog-author","avatar":"https://gitee.com/gitgit1/cloudimage/raw/master/img/-77bc1d189fd53f98.jpg","link":"/","description":"整个博客督促自己学习<br>Phone：15111076993<br>QQ:1363089248","socials":{"github":"https://github.com/damowang-cxx","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}